{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\src\\\\containers\\\\Welcome.js\";\nimport React, { Component } from 'react';\nimport logo from \"../media/psych_logo.jpg\";\nimport './Welcome.css';\nimport { Redirect } from \"react-router-dom\";\nimport { QuestCreate, QuestRecompute, QuestTrials, QuestUpdate, QuestStimulate, QuestMean, QuestMode, QuestSd, QuestP, QuestPdf, QuestQuantile, PAL_Gumbel, cumsum } from \"../Quest.js\";\nimport { ch_QuestBetaAnalysis, gumbel_intensities } from \"../VisualQuest.js\";\nimport { connect } from 'react-redux';\nimport { add_array as _add_array, add_response_1 as _add_response_ } from '../actions/data';\n\nvar Welcome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Welcome, _Component);\n\n  function Welcome(props) {\n    var _this;\n\n    _classCallCheck(this, Welcome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Welcome).call(this, props));\n    _this.keyFunction = _this.keyFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      continue: false\n    };\n    _this.vis_quest = _this.vis_quest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Welcome, [{\n    key: \"vis_quest\",\n    value: function vis_quest(tGuess_1, tGuessSd_1, tGuess_2, tGuessSd_2, pThreshold, beta, delta, gamma) {\n      var q1 = QuestCreate(tGuess_1, tGuessSd_1, pThreshold, beta, delta, gamma);\n      q1.normalizePdf = 1;\n      var q2 = QuestCreate(tGuess_2, tGuessSd_2, pThreshold, beta, delta, gamma);\n      q2.normalizePdf = 1; // Quest Trial numbers\n\n      var q1_trialnum = 0;\n      var q2_trialnum = 0;\n      var k = 0; //overall trial numbers\n\n      var frame = 0;\n      var log_contrast_1;\n      var log_contrast_2;\n      var currentQ = 0;\n      console.log(q1);\n\n      while (k < this.trialsDesired * 2) {\n        var nowTime = new Date().getTime() / 1000;\n        k += 1;\n\n        if (q1_trialnum == q2_trialnum) {\n          // if equal trial numbers, time to go to the next one for staircase 1_\n          q1_trialnum = q1_trialnum + 1;\n          currentQ = 1;\n        }\n\n        if (q1_trialnum != q2_trialnum) {\n          // cannot have multiple if and else blocks in Javascript\n          q2_trialnum = q2_trialnum + 1;\n          currentQ = 2;\n        }\n\n        if (currentQ == 1) {\n          if (k == 1) {\n            log_contrast_1 = tGuess_1 + 0.3; //  Make this procedure go from high to low contrast.\n          } // if(k != 1){\n          //     if !isNaN(trialdata_1{q_1_trialnum-1,2})  // Repeat last level if pt did not have recorded response.\n          //             log_contrast_1=QuestQuantile(q_1) // Recommended by Pelli (1987), and still our favorite\n          // }\n          // if ~isnan(trialdata_1{q_1_trialnum,2})\n          //q_1=QuestUpdate(q_1,log_contrast_1,accuracy_1(q_1_trialnum,1)); % Add the new datum (actual test intensity and observer response) to the database.\n          ///////////////////////////DOES TRIALDATA ISNAN HAVE TO BE INCLUDED? //////////////////////////////////////\n          else {\n              if (k == 2) {\n                log_contrast_2 = tGuess_2 - 0.3; // Make this procedure go from low to high contrast\n              } else {\n                log_contrast_2 = QuestQuantile(q2);\n              }\n            }\n        }\n      }\n\n      var math = require('mathjs'); //Statistics\n\n\n      var t1 = QuestMean(q1); // Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\n\n      var sd1 = QuestSd(q1);\n      var t2 = QuestMean(q2); // Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\n\n      var sd2 = QuestSd(q2); // Take the arithmetic mean of these two threshold (75%) estimates.\n\n      var tmean = math.mean([t1, t2]);\n      var sdmean = math.mean([sd1, sd2]);\n      var lambda = 0; // normally in config file//////////////////////\n\n      var gamma = 0.01; // normally in config file//////////////////////\n\n      var intensities = gumbel_intensities(q1, q2, tmean, lambda, gamma);\n      return intensities;\n    }\n  }, {\n    key: \"keyFunction\",\n    value: function keyFunction(event) {\n      if (event.keyCode === 81) {\n        alert(\"User has Requested to Continue\");\n        this.setState(function (state, props) {\n          return {\n            continue: true\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.keyFunction, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.keyFunction, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // var tGuess = 0.5,\n      //   tGuessSd = 0.1,\n      //   pThreshold = 0.75,\n      //   beta = 3.5,\n      //   delta = 0.01,\n      //   gamma = 0.01,\n      //   grain = 0.001,\n      //   dim = 1000,\n      //   range = 20;\n      // var q = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\n      // console.log(q.pdf); \n      // var q2 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\n      // q2.updatePdf = 1; \n      // q2 = QuestUpdate(q2, 0.5, 1);\n      // console.log(q2);\n      // console.log( QuestQuantile(q), QuestQuantile(q2)); \n      // console.log(this.props.data);\n      if (this.state.continue === true) {\n        return React.createElement(Redirect, {\n          to: \"/Instructions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Welcome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"Welcome-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Welcome-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Welcome to the study! \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"Please enter responses to the questions asked by pressing the:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" 'Q' key for 'YES I SEE IT'\"), \" or \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" 'E' key for \\\"NO I DO NOT'\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), \" Sometimes it may be difficult to answer, but if you do not know, please make your best guess.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \" PRESS the \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" YES I SEE IT / 'Q' key\"), \" to CONTINUE\")), React.createElement(\"a\", {\n        href: \"https://medicine.yale.edu/psychiatry/care/cmhc/\",\n        title: \"Learn more about the Connecticut Mental Health Center\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"Site-link\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Welcome;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add_response_1: function add_response_1(elem) {\n      return dispatch(_add_response_(elem));\n    },\n    add_array: function add_array(arr) {\n      return dispatch(_add_array(arr));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);","map":{"version":3,"sources":["C:\\Users\\Alika\\Desktop\\VCH_APP\\src\\containers\\Welcome.js"],"names":["React","Component","logo","Redirect","QuestCreate","QuestRecompute","QuestTrials","QuestUpdate","QuestStimulate","QuestMean","QuestMode","QuestSd","QuestP","QuestPdf","QuestQuantile","PAL_Gumbel","cumsum","ch_QuestBetaAnalysis","gumbel_intensities","connect","add_array","add_response_1","Welcome","props","keyFunction","bind","state","continue","vis_quest","tGuess_1","tGuessSd_1","tGuess_2","tGuessSd_2","pThreshold","beta","delta","gamma","q1","normalizePdf","q2","q1_trialnum","q2_trialnum","k","frame","log_contrast_1","log_contrast_2","currentQ","console","log","trialsDesired","nowTime","Date","getTime","math","require","t1","sd1","t2","sd2","tmean","mean","sdmean","lambda","intensities","event","keyCode","alert","setState","document","addEventListener","removeEventListener","mapStateToProps","data","mapDispatchToProps","dispatch","elem","arr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from \"../media/psych_logo.jpg\"\r\nimport './Welcome.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { QuestCreate, QuestRecompute, QuestTrials, QuestUpdate, QuestStimulate, QuestMean, QuestMode, QuestSd, QuestP, QuestPdf, QuestQuantile, PAL_Gumbel, cumsum } from \"../Quest.js\"\r\nimport { ch_QuestBetaAnalysis, gumbel_intensities } from \"../VisualQuest.js\"\r\n\r\nimport { connect } from 'react-redux'\r\nimport { add_array, add_response_1 } from '../actions/data'\r\n\r\n\r\nclass Welcome extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props); \r\n    this.keyFunction = this.keyFunction.bind(this); \r\n    this.state = {\r\n      continue: false,\r\n    }\r\n\r\n    this.vis_quest = this.vis_quest.bind(this); \r\n  }\r\n\r\n  vis_quest( tGuess_1, tGuessSd_1, tGuess_2, tGuessSd_2, pThreshold, beta, delta, gamma ){\r\n\r\n    var q1= QuestCreate(tGuess_1, tGuessSd_1, pThreshold, beta, delta, gamma);\r\n    q1.normalizePdf = 1;\r\n\r\n    var q2 = QuestCreate(tGuess_2, tGuessSd_2, pThreshold, beta, delta, gamma);\r\n    q2.normalizePdf = 1;\r\n\r\n    // Quest Trial numbers\r\n    var q1_trialnum = 0;\r\n    var q2_trialnum = 0;\r\n    var k = 0;                      //overall trial numbers\r\n    var frame = 0; \r\n    var log_contrast_1;\r\n    var log_contrast_2;\r\n    var currentQ = 0; \r\n\r\n    console.log(q1); \r\n\r\n    while(k < (this.trialsDesired * 2)){\r\n        var nowTime = new Date().getTime() / 1000;     \r\n\r\n        \r\n        k += 1; \r\n\r\n        if(q1_trialnum == q2_trialnum){  // if equal trial numbers, time to go to the next one for staircase 1_\r\n                q1_trialnum = q1_trialnum + 1;\r\n                currentQ = 1;\r\n        }\r\n        if(q1_trialnum != q2_trialnum){  // cannot have multiple if and else blocks in Javascript\r\n            q2_trialnum = q2_trialnum + 1;\r\n            currentQ = 2;\r\n        }\r\n        if( currentQ == 1 ){\r\n            \r\n            if(k == 1){\r\n                log_contrast_1 = tGuess_1 + 0.3;  //  Make this procedure go from high to low contrast.\r\n            }\r\n            // if(k != 1){\r\n            //     if !isNaN(trialdata_1{q_1_trialnum-1,2})  // Repeat last level if pt did not have recorded response.\r\n            //             log_contrast_1=QuestQuantile(q_1) // Recommended by Pelli (1987), and still our favorite\r\n            // }\r\n            // if ~isnan(trialdata_1{q_1_trialnum,2})\r\n            //q_1=QuestUpdate(q_1,log_contrast_1,accuracy_1(q_1_trialnum,1)); % Add the new datum (actual test intensity and observer response) to the database.\r\n\r\n            ///////////////////////////DOES TRIALDATA ISNAN HAVE TO BE INCLUDED? //////////////////////////////////////\r\n\r\n            else{\r\n                if( k == 2 ){\r\n                    log_contrast_2 = tGuess_2 - 0.3;  // Make this procedure go from low to high contrast\r\n                }\r\n                else{\r\n                    log_contrast_2 = QuestQuantile(q2);\r\n                }\r\n            }\r\n        }\r\n                \r\n    }\r\n\r\n    const math = require('mathjs');\r\n\r\n    //Statistics\r\n    var t1 = QuestMean(q1);\t\t// Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\r\n    var sd1= QuestSd(q1);\r\n    \r\n    var t2 = QuestMean(q2);\t\t// Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\r\n    var sd2 = QuestSd(q2);\r\n    \r\n    // Take the arithmetic mean of these two threshold (75%) estimates.\r\n    var tmean = math.mean([t1,t2]);\r\n    var sdmean = math.mean([sd1,sd2]);\r\n\r\n    var lambda = 0; // normally in config file//////////////////////\r\n    var gamma = 0.01; // normally in config file//////////////////////\r\n\r\n    var intensities = gumbel_intensities(q1, q2, tmean, lambda, gamma);\r\n\r\n    return intensities; \r\n}\r\n\r\n  keyFunction(event){\r\n    if(event.keyCode === 81) {\r\n      alert(\"User has Requested to Continue\");\r\n      this.setState((state, props) => ({\r\n        continue: true\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(\"keydown\", this.keyFunction, false);\r\n  }\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"keydown\", this.keyFunction, false);\r\n  }\r\n\r\n  render() {\r\n    \r\n    // var tGuess = 0.5,\r\n    //   tGuessSd = 0.1,\r\n    //   pThreshold = 0.75,\r\n    //   beta = 3.5,\r\n    //   delta = 0.01,\r\n    //   gamma = 0.01,\r\n    //   grain = 0.001,\r\n    //   dim = 1000,\r\n    //   range = 20;\r\n    // var q = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\r\n\r\n    // console.log(q.pdf); \r\n    // var q2 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\r\n    // q2.updatePdf = 1; \r\n    // q2 = QuestUpdate(q2, 0.5, 1);\r\n    // console.log(q2);\r\n\r\n    // console.log( QuestQuantile(q), QuestQuantile(q2)); \r\n    // console.log(this.props.data);\r\n\r\n    \r\n\r\n    if(this.state.continue === true){\r\n      return <Redirect to=\"/Instructions\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"Welcome\">\r\n        <input type=\"hidden\"/>\r\n        <header className=\"Welcome-header\">\r\n        <div className=\"text-container\">\r\n          <p className=\"Welcome-text\">\r\n            <span className=\"bigger\">Welcome to the study! </span>\r\n            <br /><br />Please enter responses to the questions asked by pressing the: \r\n            <br /><br /><b> 'Q' key for 'YES I SEE IT'</b> or <b> 'E' key for \"NO I DO NOT'</b>\r\n            <br /><br /><br /><br /> Sometimes it may be difficult to answer, but if you do not know, please make your best guess.\r\n            <br /><br /><br /><br /> PRESS the <b> YES I SEE IT / 'Q' key</b> to CONTINUE\r\n            \r\n          </p>\r\n        </div>      \r\n          <a\r\n            href=\"https://medicine.yale.edu/psychiatry/care/cmhc/\"\r\n            title=\"Learn more about the Connecticut Mental Health Center\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={logo} className=\"Site-link\" alt=\"logo\" />\r\n          </a>\r\n\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  add_response_1: ( elem ) => dispatch(add_response_1( elem )),\r\n  add_array: ( arr ) => dispatch(add_array( arr )),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome)"]},"metadata":{},"sourceType":"module"}