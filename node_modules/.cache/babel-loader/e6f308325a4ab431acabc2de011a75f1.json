{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\src\\\\containers\\\\Trial.js\";\nimport React, { Component } from 'react';\nimport './Trial.css';\nimport { Redirect } from \"react-router-dom\";\nimport { createStim, createGabor } from \"../Stim.js\";\nimport { connect } from 'react-redux';\nimport { add_array as _add_array, add_response_1 as _add_response_, add_response_time_1 as _add_response_time_, add_contrast_1 as _add_contrast_ } from '../actions/data';\n\nvar Trial =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Trial, _Component);\n\n  function Trial(props) {\n    var _this;\n\n    _classCallCheck(this, Trial);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Trial).call(this, props));\n    _this.keyFunction = _this.keyFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.create_noise = _this.create_noise.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      continue: false,\n      counter: 0,\n      responses_1: [],\n      contrast_array_1: [],\n      response_time_1: [],\n      ratings_1: [],\n      responses_2: [],\n      contrast_array_2: [],\n      response_time_2: [],\n      ratings_2: [],\n      time_window: false,\n      time_window_start: 0,\n      time_window_rating: false,\n      limit: 100,\n      contrast_flag: 1 //1 for contrast 1 and 2 for contrast 2\n\n    };\n    _this.canvasRef = React.createRef();\n    _this.audioContext = new AudioContext();\n    return _this;\n  }\n\n  _createClass(Trial, [{\n    key: \"create_noise\",\n    value: function create_noise(audioContext, callback) {\n      // contrast values\n      var c25 = 0.2;\n      var c50 = 0.5;\n      var c75 = 0.75; //train_test arrays\n\n      var tt1 = [c25, c50, c75];\n      var end = tt1.length;\n      var contrast_block = tt1;\n      var index = 0;\n\n      var SimplexNoise = require('simplex-noise');\n\n      var simplex = new SimplexNoise(),\n          canvas = document.getElementById('c'),\n          ctx = canvas.getContext('2d'),\n          imgdata = ctx.getImageData(0, 0, canvas.width, canvas.height),\n          data = imgdata.data,\n          t = 0;\n      var stim = createStim();\n      var stimulus_blank = createGabor(stim, 0);\n      var stimulus;\n      var jitter = Math.floor(Math.random() * 20); //jitter tone presentation 0-500ms per trial\n\n      var start_time = 100;\n      var contrast = 0;\n      var intervalId = undefined;\n      var that = this;\n      var seconds = 0;\n\n      function generate_noise() {\n        return _generate_noise.apply(this, arguments);\n      }\n\n      function _generate_noise() {\n        _generate_noise = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var seconds, x, y, r, recWidth, recHeight, xPos, yPos, img, g;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (t == start_time + jitter) {\n                    index = that.state.counter;\n                    contrast = contrast_block[index++];\n                    console.log(contrast);\n                    seconds = new Date().getTime() / 1000;\n                    console.log(\"time on \", seconds);\n                    that.setState({\n                      time_window: true,\n                      time_window_rating: true,\n                      time_window_start: seconds\n                    });\n                    console.log(that.state.responses_1, that.state.ratings_1, that.state.response_time_1, that.state.contrast_array_1);\n                    stimulus = createGabor(stim, contrast);\n                    beep(50, 830, 300, audioContext); //beep for arg3 miliseconds\n                  }\n\n                  for (x = 0; x < 256; x++) {\n                    for (y = 0; y < 256; y++) {\n                      if (t == start_time + jitter || t == start_time + jitter + 1 || t == start_time + jitter + 2 || t == start_time + jitter + 3 || t == start_time + jitter + 4 || t == start_time + jitter + 5 || t == start_time + jitter + 6 || t == start_time + jitter + 7 || t == start_time + jitter + 8 || t == start_time + jitter + 9 || t == start_time + jitter + 10 || t == start_time + jitter + 11 || t == start_time + jitter + 12 || t == start_time + jitter + 13 || t == start_time + jitter + 14 || t == start_time + jitter + 15 || t == start_time + jitter + 16 || t == start_time + jitter + 17 || t == start_time + jitter + 18 || t == start_time + jitter + 19 || t == start_time + jitter + 20 || t == start_time + jitter + 21 || t == start_time + jitter + 22 || t == start_time + jitter + 23 || t == start_time + jitter + 24 || t == start_time + jitter + 25 || t == start_time + jitter + 26 || t == start_time + jitter + 27 || t == start_time + jitter + 28 || t == start_time + jitter + 29 || t == start_time + jitter + 30) {\n                        if (t == start_time + jitter + 30) {\n                          t = 0; //during beep show signal, then reset timer to 0\n                        }\n\n                        r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\n                        data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 3] = 255;\n                      } else {\n                        seconds = new Date().getTime() / 1000;\n\n                        if (that.state.time_window_start + 2 == seconds) {\n                          that.setState({\n                            time_window: false,\n                            time_window_rating: false\n                          });\n\n                          if (that.state.contrast_array_1.length < that.state.responses_1.length) {\n                            that.setState({\n                              contrast_array_1: that.state.contrast_array_1.concat([contrast])\n                            });\n                          }\n\n                          if (that.state.responses_1.length != that.state.ratings_1.length) {\n                            if (that.state.responses_1.length > that.state.ratings_1.length) {\n                              console.log(\"response and response time discarded\", that.state.responses_1, that.state.response_time_1, that.state.ratings_1, that.state.contrast_array_1);\n                              that.setState({\n                                responses_1: that.state.responses_1.slice(0, that.state.ratings_1.length),\n                                response_time_1: that.state.response_time_1.slice(0, that.state.ratings_1.length),\n                                counter: that.state.counter - 1,\n                                contrast_array_1: that.state.contrast_array_1.slice(0, that.state.ratings_1.length)\n                              });\n                            } else {\n                              console.log(\"rating discarded\", that.state.responses_1, that.state.ratings_1, that.state.contrast_array_1);\n                              that.setState({\n                                ratings_1: that.state.ratings_1.slice(0, that.state.responses_1.length)\n                              });\n                            }\n                          }\n\n                          console.log(\"time off \", seconds);\n                        }\n\n                        r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\n                        data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 3] = 255; //if there is no beep, show blank signal\n                      }\n                    }\n                  }\n\n                  t++;\n                  ctx.putImageData(imgdata, 0, 0);\n                  recWidth = canvas.width / 8;\n                  recHeight = canvas.height / 8;\n                  xPos = canvas.width / 2 - recWidth / 2;\n                  yPos = canvas.height / 2 - recHeight / 2;\n                  img = new Image();\n                  img.src = \"https://www.shareicon.net/data/256x256/2015/12/04/682310_cross_512x512.png\";\n                  ctx.fillStyle = \"gray\";\n                  ctx.fillRect(xPos, yPos, recWidth, recHeight);\n                  ctx.drawImage(img, xPos, yPos, recWidth, recHeight);\n\n                  if (!(index == end)) {\n                    _context.next = 19;\n                    break;\n                  }\n\n                  window.cancelAnimationFrame(intervalId);\n\n                  for (g = 0; g < end; g++) {\n                    that.props.add_response_1(that.state.responses_1[g]);\n                    that.props.add_response_time_1(that.state.response_time_1[g]);\n                    that.props.add_contrast_1(that.state.contrast_array_1[g]);\n                  }\n\n                  that.audioContext.close();\n                  that.setState({\n                    continue: true\n                  });\n                  return _context.abrupt(\"return\");\n\n                case 19:\n                  if (index < end) {\n                    intervalId = window.requestAnimationFrame(generate_noise);\n                  }\n\n                case 20:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _generate_noise.apply(this, arguments);\n      }\n\n      generate_noise.call(that);\n    }\n  }, {\n    key: \"keyFunction\",\n    value: function keyFunction(event) {\n      var seconds = new Date().getTime() / 1000;\n\n      if (event.keyCode === 81 && this.state.time_window == true) {\n        // Set setState\n        this.setState({\n          counter: this.state.counter + 1,\n          responses_1: this.state.responses_1.concat([1]),\n          response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if (event.keyCode === 69 && this.state.time_window == true) {\n        this.setState({\n          counter: this.state.counter + 1,\n          responses_1: this.state.responses_1.concat([0]),\n          response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if ((event.keyCode === 49 || event.keyCode === 50 || event.keyCode === 51 || event.keyCode === 52 || event.keyCode === 53) && this.state.time_window_rating == true) {\n        this.setState({\n          ratings_1: this.state.ratings_1.concat([event.keyCode - 48]),\n          time_window_rating: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.keyFunction, false);\n\n      if (this.state.continue == false) {\n        this.create_noise(this.audioContext);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.keyFunction, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.continue == true) {\n        alert(\"Trial completed\");\n        return React.createElement(Redirect, {\n          to: \"/Complete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Trial\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"Trial-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"c\",\n        width: \"256\",\n        height: \"256\",\n        style: {\n          zIndex: \"0\",\n          position: \"fixed\",\n          left: \"25%\",\n          width: '50%',\n          height: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"c2\",\n        width: \"256\",\n        height: \"256\",\n        style: {\n          zIndex: \"1\",\n          position: \"fixed\",\n          left: \"25%\",\n          width: '50%',\n          height: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Trial;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add_response_1: function add_response_1(element) {\n      return dispatch(_add_response_(element));\n    },\n    add_response_time_1: function add_response_time_1(element) {\n      return dispatch(_add_response_time_(element));\n    },\n    add_contrast_1: function add_contrast_1(element) {\n      return dispatch(_add_contrast_(element));\n    },\n    add_array: function add_array(arr) {\n      return dispatch(_add_array(arr));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trial);\n\nfunction beep(amp, freq, ms, audioContext) {\n  //amp:0..100, freq in Hz, ms\n  if (!audioContext) return;\n  var osc = audioContext.createOscillator();\n  var gain = audioContext.createGain();\n  osc.connect(gain);\n  osc.value = freq;\n  gain.connect(audioContext.destination);\n  gain.gain.value = amp / 100;\n  osc.start(audioContext.currentTime);\n  osc.stop(audioContext.currentTime + ms / 1000);\n} //array shuffling function, used to randomize order of presentation for different blocks\n\n\nfunction shuffle(array) {\n  var i = 0;\n  var j = 0;\n  var temp = null;\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Alika\\Desktop\\VCH_APP\\src\\containers\\Trial.js"],"names":["React","Component","Redirect","createStim","createGabor","connect","add_array","add_response_1","add_response_time_1","add_contrast_1","Trial","props","keyFunction","bind","create_noise","state","continue","counter","responses_1","contrast_array_1","response_time_1","ratings_1","responses_2","contrast_array_2","response_time_2","ratings_2","time_window","time_window_start","time_window_rating","limit","contrast_flag","canvasRef","createRef","audioContext","AudioContext","callback","c25","c50","c75","tt1","end","length","contrast_block","index","SimplexNoise","require","simplex","canvas","document","getElementById","ctx","getContext","imgdata","getImageData","width","height","data","t","stim","stimulus_blank","stimulus","jitter","Math","floor","random","start_time","contrast","intervalId","undefined","that","seconds","generate_noise","console","log","Date","getTime","setState","beep","x","y","r","noise3D","alpha","concat","slice","putImageData","recWidth","recHeight","xPos","yPos","img","Image","src","fillStyle","fillRect","drawImage","window","cancelAnimationFrame","g","close","requestAnimationFrame","call","event","keyCode","addEventListener","removeEventListener","alert","zIndex","position","left","mapStateToProps","mapDispatchToProps","dispatch","element","arr","amp","freq","ms","osc","createOscillator","gain","createGain","value","destination","start","currentTime","stop","shuffle","array","i","j","temp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Trial.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createStim, createGabor } from \"../Stim.js\"\r\n\r\nimport { connect } from 'react-redux'\r\nimport { add_array, add_response_1, add_response_time_1, add_contrast_1 } from '../actions/data'\r\n\r\nclass Trial extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n        this.keyFunction = this.keyFunction.bind(this); \r\n        this.create_noise = this.create_noise.bind(this);  \r\n        this.state = {\r\n          continue: false,\r\n          counter: 0,\r\n\r\n          responses_1: [],\r\n          contrast_array_1: [],\r\n          response_time_1: [],\r\n          ratings_1: [],\r\n\r\n          responses_2: [],\r\n          contrast_array_2: [],\r\n          response_time_2: [],\r\n          ratings_2: [],\r\n\r\n          time_window: false,\r\n          time_window_start: 0,\r\n          time_window_rating: false, \r\n          limit: 100,\r\n\r\n\r\n          contrast_flag: 1, //1 for contrast 1 and 2 for contrast 2\r\n\r\n        }\r\n        this.canvasRef = React.createRef(); \r\n        this.audioContext = new AudioContext();\r\n      }\r\n\r\n      create_noise( audioContext, callback ){\r\n\r\n        // contrast values\r\n        var c25 = 0.2;\r\n        var c50 = 0.5;\r\n        var c75 = 0.75;\r\n\r\n        //train_test arrays\r\n        var tt1 = [c25, c50, c75 ];\r\n        var end = tt1.length; \r\n        var contrast_block = tt1; \r\n        var index = 0; \r\n\r\n        var SimplexNoise = require('simplex-noise');\r\n        \r\n        var simplex = new SimplexNoise(),\r\n          canvas = document.getElementById('c'),\r\n          ctx = canvas.getContext('2d'),\r\n          imgdata = ctx.getImageData(0, 0, canvas.width, canvas.height),\r\n          data = imgdata.data,\r\n          t = 0;\r\n        \r\n        var stim = createStim(); \r\n        var stimulus_blank = createGabor( stim, 0 ); \r\n        \r\n        var stimulus; \r\n        var jitter = Math.floor(Math.random()* 20); //jitter tone presentation 0-500ms per trial\r\n        var start_time = 100;\r\n        var contrast = 0; \r\n        var intervalId = undefined; \r\n\r\n        var that = this;\r\n        var seconds = 0; \r\n\r\n        async function generate_noise( ){\r\n\r\n            if ( t == start_time + jitter){\r\n              index = that.state.counter; \r\n\r\n              contrast = contrast_block[index++];\r\n              console.log(contrast); \r\n\r\n              var seconds = new Date().getTime() / 1000;\r\n\r\n              console.log(\"time on \", seconds);\r\n\r\n              that.setState({ \r\n                time_window: true, \r\n                time_window_rating: true, \r\n                time_window_start: seconds,\r\n              });\r\n\r\n              console.log(that.state.responses_1, that.state.ratings_1, that.state.response_time_1, that.state.contrast_array_1); \r\n\r\n              stimulus = createGabor( stim, contrast ); \r\n              beep(50, 830, 300, audioContext); //beep for arg3 miliseconds\r\n            }\r\n\r\n            for (var x = 0; x < 256; x++) {\r\n              for (var y = 0; y < 256; y++) {\r\n                if(t == start_time + jitter || t == start_time + jitter + 1 || t == start_time + jitter + 2|| t == start_time+ jitter+3 || t == start_time + jitter+4\r\n                  || t == start_time+ jitter + 5 || t == start_time+ jitter +6 || t == start_time+ jitter +7|| t == start_time + jitter+8|| t == start_time+ jitter+9\r\n                  || t == start_time + jitter+ 10|| t == start_time+ jitter +11|| t == start_time+ jitter +12|| t == start_time + jitter+13|| t == start_time+ jitter+14\r\n                  || t == start_time + jitter+ 15|| t == start_time + jitter + 16|| t == start_time+ jitter +17|| t == start_time + jitter +18|| t == start_time+ jitter +19\r\n                  || t == start_time+ jitter + 20|| t == start_time+ jitter + 21|| t == start_time+ jitter + 22|| t == start_time+ jitter + 23|| t == start_time+ jitter + 24\r\n                  || t == start_time+ jitter + 25|| t == start_time+ jitter + 26|| t == start_time+ jitter + 27|| t == start_time+ jitter + 28|| t == start_time+ jitter + 29\r\n                  || t == start_time+ jitter + 30){\r\n                  if( t == start_time+ jitter +30 ){\r\n                    t = 0;\r\n                    //during beep show signal, then reset timer to 0\r\n                  }\r\n\r\n                  var r = simplex.noise3D(x / 8, y / 8, t/8)* 0.4 + 0.35;\r\n                  data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 3] = 255;\r\n                }\r\n\r\n                else{\r\n\r\n                  seconds = new Date().getTime() / 1000\r\n\r\n                  if(that.state.time_window_start + 2 == seconds){\r\n                    that.setState({ \r\n                      time_window: false,\r\n                      time_window_rating: false,  \r\n                    });\r\n\r\n                    if(that.state.contrast_array_1.length < that.state.responses_1.length){\r\n                      that.setState({ contrast_array_1: that.state.contrast_array_1.concat([contrast]) });\r\n                    }\r\n\r\n                    if( that.state.responses_1.length != that.state.ratings_1.length ){\r\n\r\n                      if( that.state.responses_1.length > that.state.ratings_1.length ){\r\n\r\n                        console.log(\"response and response time discarded\", that.state.responses_1, that.state.response_time_1, that.state.ratings_1, that.state.contrast_array_1);\r\n\r\n                        that.setState({\r\n                          responses_1: that.state.responses_1.slice(0, that.state.ratings_1.length),\r\n                          response_time_1: that.state.response_time_1.slice(0, that.state.ratings_1.length),\r\n                          counter: that.state.counter - 1, \r\n                          contrast_array_1: that.state.contrast_array_1.slice(0, that.state.ratings_1.length)\r\n                        });\r\n                      }\r\n\r\n                      else{\r\n                        console.log(\"rating discarded\", that.state.responses_1, that.state.ratings_1, that.state.contrast_array_1);\r\n\r\n                        that.setState({\r\n                          ratings_1: that.state.ratings_1.slice(0, that.state.responses_1.length), \r\n                        });\r\n                      }\r\n                    }\r\n                    console.log(\"time off \", seconds);\r\n                  }\r\n\r\n\r\n                  var r = simplex.noise3D(x / 8, y / 8, t/8) * 0.4 + 0.35;\r\n                  data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\r\n                  data[(x + y * 256) * 4 + 3] = 255;\r\n                  //if there is no beep, show blank signal\r\n                }\r\n              }\r\n            }\r\n\r\n            t++;\r\n            ctx.putImageData(imgdata, 0, 0);\r\n            \r\n            var recWidth = canvas.width / 8;\r\n            var recHeight = canvas.height / 8;\r\n\r\n            var xPos = (canvas.width/2) - (recWidth/2);\r\n\r\n            var yPos = (canvas.height/2) - (recHeight/2);\r\n            var img=new Image();\r\n            img.src = \"https://www.shareicon.net/data/256x256/2015/12/04/682310_cross_512x512.png\";\r\n            ctx.fillStyle = \"gray\";\r\n            \r\n            ctx.fillRect(xPos, yPos, recWidth, recHeight);\r\n            ctx.drawImage(img, xPos, yPos, recWidth, recHeight);\r\n\r\n            if(index == end ){\r\n              window.cancelAnimationFrame(intervalId); \r\n              for(var g = 0; g < end; g++){\r\n                that.props.add_response_1( that.state.responses_1[g] );\r\n                that.props.add_response_time_1( that.state.response_time_1[g] );\r\n                that.props.add_contrast_1( that.state.contrast_array_1[g] );\r\n              }\r\n\r\n              that.audioContext.close();\r\n              that.setState({ continue: true });\r\n              return;\r\n            }\r\n\r\n            if(index < end){\r\n              intervalId = window.requestAnimationFrame(generate_noise);\r\n            }\r\n\r\n          }\r\n\r\n          generate_noise.call(that);\r\n\r\n      }\r\n    \r\n      keyFunction(event){\r\n        var seconds = new Date().getTime() / 1000\r\n\r\n        if(event.keyCode === 81 && this.state.time_window == true){\r\n\r\n          // Set setState\r\n          this.setState({\r\n            counter: this.state.counter + 1, \r\n            responses_1: this.state.responses_1.concat([1]),\r\n            response_time_1: this.state.response_time_1.concat([ seconds - this.state.time_window_start]),\r\n            time_window: false, \r\n          });\r\n\r\n          if(this.state.counter == this.state.limit){\r\n            this.setState({ continue: true });\r\n          }\r\n\r\n        }\r\n\r\n        if(event.keyCode === 69 && this.state.time_window == true) {\r\n          this.setState({\r\n            counter: this.state.counter + 1, \r\n            responses_1: this.state.responses_1.concat([0]),\r\n            response_time_1: this.state.response_time_1.concat([ seconds - this.state.time_window_start]),\r\n            time_window: false, \r\n          });\r\n\r\n          if(this.state.counter == this.state.limit){\r\n            this.setState({ continue: true });\r\n          }\r\n        }\r\n\r\n\r\n        if( ( event.keyCode === 49 || event.keyCode === 50 || event.keyCode === 51 || event.keyCode === 52 || event.keyCode === 53) && this.state.time_window_rating == true){\r\n          this.setState({\r\n            ratings_1: this.state.ratings_1.concat([event.keyCode - 48]),\r\n            time_window_rating: false, \r\n          });\r\n        }\r\n      }\r\n    \r\n      componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.keyFunction, false);\r\n        if(this.state.continue == false){\r\n          this.create_noise( this.audioContext ); \r\n        }\r\n      }\r\n      componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.keyFunction, false);\r\n      }\r\n      \r\n      render() { \r\n\r\n        if(this.state.continue == true){\r\n          alert(\"Trial completed\")\r\n          return <Redirect to=\"/Complete\" />\r\n        }\r\n    \r\n        return (\r\n          <div className=\"Trial\">\r\n            <input type=\"hidden\"/>\r\n            <header className=\"Trial-header\">\r\n            <canvas id=\"c\" width=\"256\" height=\"256\" \r\n              style={{ zIndex:\"0\", position: \"fixed\", left: \"25%\",width: '50%', height:'auto'}}></canvas>\r\n            <canvas id=\"c2\" width=\"256\" height=\"256\" \r\n              style={{ zIndex:\"1\", position: \"fixed\", left: \"25%\", width: '50%', height:'auto'}}></canvas>\r\n            </header>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  add_response_1: ( element ) => dispatch(add_response_1( element )),\r\n  add_response_time_1: ( element ) => dispatch(add_response_time_1( element )),\r\n  add_contrast_1: ( element ) => dispatch(add_contrast_1( element )),\r\n  add_array: ( arr ) => dispatch(add_array( arr )),\r\n})\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Trial);\r\n\r\n\r\nfunction beep(amp, freq, ms, audioContext){//amp:0..100, freq in Hz, ms\r\n  if (!audioContext) return;\r\n  var osc = audioContext.createOscillator();\r\n  var gain = audioContext.createGain();\r\n  osc.connect(gain);\r\n  osc.value = freq;\r\n  gain.connect(audioContext.destination);\r\n  gain.gain.value = amp/100;\r\n  osc.start(audioContext.currentTime);\r\n  osc.stop(audioContext.currentTime+ms/1000);\r\n }\r\n\r\n //array shuffling function, used to randomize order of presentation for different blocks\r\nfunction shuffle (array) {\r\n  var i = 0\r\n  var j = 0\r\n  var temp = null\r\n\r\n  for (i = array.length - 1; i > 0; i -= 1) {\r\n    j = Math.floor(Math.random() * (i + 1))\r\n    temp = array[i]\r\n    array[i] = array[j]\r\n    array[j] = temp\r\n    }\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}