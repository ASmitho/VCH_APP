{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  responses_1: [],\n  responses_2: [],\n  response_time_1: [],\n  response_time_2: [],\n  contrast_1: [],\n  contrast_2: [],\n  test: 1\n};\n\nvar rtReducer = function rtReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_ARRAY':\n      return state + 1;\n\n    case 'ADD_RESPONSE_1':\n      return _objectSpread({}, state, {\n        responses_1: [].concat(_toConsumableArray(state.responses_1), [action.payload])\n      });\n\n    case 'ADD_RESPONSE_TIME_1':\n      return _objectSpread({}, state, {\n        response_time_1: [].concat(_toConsumableArray(state.response_time_1), [action.payload])\n      });\n\n    case 'ADD_CONTRAST_1':\n      return _objectSpread({}, state, {\n        contrast_1: [].concat(_toConsumableArray(state.contrast_1), [action.payload])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rtReducer;","map":{"version":3,"sources":["C:\\Users\\Alika\\Desktop\\VCH_APP\\src\\reducers\\data.js"],"names":["initialState","responses_1","responses_2","response_time_1","response_time_2","contrast_1","contrast_2","test","rtReducer","state","action","type","payload"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAInBC,EAAAA,eAAe,EAAE,EAJE;AAKnBC,EAAAA,eAAe,EAAE,EALE;AAOnBC,EAAAA,UAAU,EAAE,EAPO;AAQnBC,EAAAA,UAAU,EAAE,EARO;AASnBC,EAAAA,IAAI,EAAE;AATa,CAArB;;AAaA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,gBAAL;AACE,+BACKA,KADL;AAEER,QAAAA,WAAW,+BAAMQ,KAAK,CAACR,WAAZ,IAAyBS,MAAM,CAACE,OAAhC;AAFb;;AAIF,SAAK,qBAAL;AACE,+BACKH,KADL;AAEEN,QAAAA,eAAe,+BAAMM,KAAK,CAACN,eAAZ,IAA6BO,MAAM,CAACE,OAApC;AAFjB;;AAIF,SAAK,gBAAL;AACE,+BACKH,KADL;AAEEJ,QAAAA,UAAU,+BAAMI,KAAK,CAACJ,UAAZ,IAAwBK,MAAM,CAACE,OAA/B;AAFZ;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBH;;AAwBE,eAAeD,SAAf","sourcesContent":["const initialState = {\r\n  responses_1 :[],\r\n  responses_2 :[],\r\n\r\n  response_time_1 :[],\r\n  response_time_2 :[],\r\n\r\n  contrast_1 :[],\r\n  contrast_2 :[],\r\n  test: 1, \r\n}\r\n\r\n\r\nconst rtReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_ARRAY':\r\n        return state + 1\r\n      case 'ADD_RESPONSE_1':\r\n        return {\r\n          ...state,\r\n          responses_1: [...state.responses_1, action.payload]\r\n        }\r\n      case 'ADD_RESPONSE_TIME_1':\r\n        return {\r\n          ...state,\r\n          response_time_1: [...state.response_time_1, action.payload]\r\n        }\r\n      case 'ADD_CONTRAST_1':\r\n        return {\r\n          ...state,\r\n          contrast_1: [...state.contrast_1, action.payload]\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default rtReducer"]},"metadata":{},"sourceType":"module"}