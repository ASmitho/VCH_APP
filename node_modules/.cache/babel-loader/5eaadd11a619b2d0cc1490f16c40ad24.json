{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alika\\\\Desktop\\\\VCH_APP\\\\src\\\\containers\\\\TrialQ.js\";\nimport React, { Component } from 'react';\nimport './Trial.css';\nimport { Redirect } from \"react-router-dom\";\nimport { createStim, createGabor } from \"../Stim.js\";\nimport { QuestCreate, QuestRecompute, QuestTrials, QuestUpdate, QuestStimulate, QuestMean, QuestMode, QuestSd, QuestP, QuestPdf, QuestQuantile, PAL_Gumbel } from \"../Quest.js\";\nimport { connect } from 'react-redux';\nimport { add_array as _add_array, add_response_1 as _add_response_, add_response_time_1 as _add_response_time_, add_contrast_1 as _add_contrast_ } from '../actions/data';\n\nvar TrialQ =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrialQ, _Component);\n\n  function TrialQ(props) {\n    var _this;\n\n    _classCallCheck(this, TrialQ);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrialQ).call(this, props));\n    _this.keyFunction = _this.keyFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.create_noise = _this.create_noise.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.process_data = _this.process_data.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.gumbel_intensities = _this.gumbel_intensities.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      continue: false,\n      counter: 0,\n      counter2: 0,\n      change: false,\n      responses_1: [],\n      contrast_array_1: [],\n      response_time_1: [],\n      ratings_1: [],\n      responses_2: [],\n      contrast_array_2: [],\n      response_time_2: [],\n      ratings_2: [],\n      time_window: false,\n      time_window_start: 0,\n      time_window_rating: false,\n      limit: 100,\n      rating_window: true,\n      currentQ: 1 //1 for contrast 1 and 2 for contrast 2\n\n    };\n    _this.canvasRef = React.createRef();\n    _this.audioContext = new AudioContext();\n    return _this;\n  }\n\n  _createClass(TrialQ, [{\n    key: \"process_data\",\n    value: function process_data(q1, q2) {\n      var math = require('mathjs'); //Statistics\n\n\n      var t1 = QuestMean(q1); // Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\n\n      var sd1 = QuestSd(q1);\n      var t2 = QuestMean(q2); // Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\n\n      var sd2 = QuestSd(q2); // Take the arithmetic mean of these two threshold (75%) estimates.\n\n      var tmean = math.mean([t1, t2]);\n      var sdmean = math.mean([sd1, sd2]);\n      var lambda = 0; // normally in config file//////////////////////\n\n      var gamma = 0.01; // normally in config file//////////////////////\n\n      var intensities = gumbel_intensities(q1, q2, tmean, lambda, gamma);\n      return intensities;\n    }\n  }, {\n    key: \"gumbel_intensities\",\n    value: function gumbel_intensities(q1, q2, tmean, lambda, gamma) {}\n  }, {\n    key: \"create_noise\",\n    value: function create_noise(audioContext) {\n      var end = 80; // var contrast_block = tt1;\n\n      var index1 = 0;\n      var index2 = 0;\n      var total = 0; //train_test arrays\n\n      var tt1 = [0, .5, 1, 0, .5, 1, 0, .5, 1, 0, .5, 1];\n      var end = tt1.length;\n      var contrast_block = tt1;\n\n      var SimplexNoise = require('simplex-noise');\n\n      var simplex = new SimplexNoise(),\n          canvas = document.getElementById('c'),\n          ctx = canvas.getContext('2d'),\n          imgdata = ctx.getImageData(0, 0, canvas.width, canvas.height),\n          data = imgdata.data,\n          t = 0; //initializing QUEST\n\n      var tGuess = 0.5,\n          tGuessSd = 0.1,\n          pThreshold = 0.75,\n          beta = 3.5,\n          delta = 0.01,\n          gamma = 0.01,\n          grain = 0.001,\n          dim = 1000,\n          range = 20;\n      var q_1 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\n      var q_2 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\n      var stim = createStim();\n      var stimulus_blank = createGabor(stim, 0);\n      var stimulus;\n      var jitter = Math.floor(Math.random() * 20); //jitter tone presentation 0-500ms per trial\n\n      var start_time = 100;\n      var contrast = 0;\n      var intervalId = undefined;\n      var that = this;\n      var seconds = 0;\n\n      function vis_quest() {\n        return _vis_quest.apply(this, arguments);\n      }\n\n      function _vis_quest() {\n        _vis_quest = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var seconds, x, y, r, recWidth, recHeight, xPos, yPos, img;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (t == start_time + jitter) {\n                    index1 = that.state.counter;\n                    index2 = that.state.counter2;\n                    total = index1 + index2;\n                    console.log(QuestQuantile(q_1), QuestQuantile(q_2)); // determining which staircase to use\n\n                    if (index1 == index2) {\n                      that.setState({\n                        //current staircase is 1\n                        currentQ: 1\n                      });\n                    }\n\n                    if (index1 != index2) {\n                      index2++;\n                      that.setState({\n                        //current staircase is 2\n                        currentQ: 2\n                      });\n                    }\n\n                    if (that.state.currentQ == 1) {\n                      if (index1 = 0) {\n                        contrast = tGuess + .3;\n                      } else {\n                        contrast = QuestQuantile(q_1);\n                      }\n                    }\n\n                    if (that.state.currentQ == 2) {\n                      if (index2 = 0) {\n                        contrast = tGuess - 0.3;\n                      } else {\n                        contrast = QuestQuantile(q_2);\n                      }\n                    }\n\n                    console.log(contrast);\n                    seconds = new Date().getTime() / 1000;\n                    console.log(\"time on \", seconds);\n                    that.setState({\n                      time_window: true,\n                      time_window_rating: true,\n                      time_window_start: seconds\n                    });\n                    console.log(\"for 1\", that.state.responses_1, that.state.ratings_1, that.state.response_time_1, that.state.contrast_array_1);\n                    console.log(\"for 2\", that.state.responses_2, that.state.ratings_2, that.state.response_time_2, that.state.contrast_array_2);\n                    stimulus = createGabor(stim, contrast);\n                    beep(50, 830, 300, audioContext); //beep for arg3 miliseconds\n                  }\n\n                  for (x = 0; x < 256; x++) {\n                    for (y = 0; y < 256; y++) {\n                      if (t == start_time + jitter || t == start_time + jitter + 1 || t == start_time + jitter + 2 || t == start_time + jitter + 3 || t == start_time + jitter + 4 || t == start_time + jitter + 5 || t == start_time + jitter + 6 || t == start_time + jitter + 7 || t == start_time + jitter + 8 || t == start_time + jitter + 9 || t == start_time + jitter + 10 || t == start_time + jitter + 11 || t == start_time + jitter + 12 || t == start_time + jitter + 13 || t == start_time + jitter + 14 || t == start_time + jitter + 15 || t == start_time + jitter + 16 || t == start_time + jitter + 17 || t == start_time + jitter + 18 || t == start_time + jitter + 19 || t == start_time + jitter + 20 || t == start_time + jitter + 21 || t == start_time + jitter + 22 || t == start_time + jitter + 23 || t == start_time + jitter + 24 || t == start_time + jitter + 25 || t == start_time + jitter + 26 || t == start_time + jitter + 27 || t == start_time + jitter + 28 || t == start_time + jitter + 29 || t == start_time + jitter + 30) {\n                        if (t == start_time + jitter + 30) {\n                          t = 0; //during beep show signal, then reset timer to 0\n                        }\n\n                        r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\n                        data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 3] = 255;\n                      } else {\n                        seconds = new Date().getTime() / 1000;\n\n                        if (that.state.time_window_start + 2 == seconds) {\n                          that.setState({\n                            time_window: false,\n                            time_window_rating: false\n                          });\n\n                          if (that.state.currentQ == 1) {\n                            if (that.state.contrast_array_1.length < that.state.responses_1.length) {\n                              that.setState({\n                                contrast_array_1: that.state.contrast_array_1.concat([contrast])\n                              });\n                              that.setState({\n                                change: true\n                              });\n                            }\n\n                            if (that.state.responses_1.length != that.state.ratings_1.length) {\n                              if (that.state.responses_1.length > that.state.ratings_1.length) {\n                                console.log(\"response and response time discarded\", that.state.responses_1, that.state.response_time_1, that.state.ratings_1, that.state.contrast_array_1);\n                                that.setState({\n                                  responses_1: that.state.responses_1.slice(0, that.state.ratings_1.length),\n                                  response_time_1: that.state.response_time_1.slice(0, that.state.ratings_1.length),\n                                  counter: that.state.counter - 1,\n                                  contrast_array_1: that.state.contrast_array_1.slice(0, that.state.ratings_1.length)\n                                });\n                              } else {\n                                console.log(\"rating discarded\", that.state.responses_1, that.state.ratings_1, that.state.contrast_array_1);\n                                that.setState({\n                                  ratings_1: that.state.ratings_1.slice(0, that.state.responses_1.length)\n                                });\n                              }\n                            }\n                          }\n\n                          if (that.state.currentQ == 2) {\n                            if (that.state.contrast_array_2.length < that.state.responses_2.length) {\n                              that.setState({\n                                contrast_array_2: that.state.contrast_array_2.concat([contrast])\n                              });\n                              that.setState({\n                                change: true\n                              });\n                            }\n\n                            if (that.state.responses_2.length != that.state.ratings_2.length) {\n                              if (that.state.responses_2.length > that.state.ratings_2.length) {\n                                console.log(\"response and response time discarded\", that.state.responses_2, that.state.response_time_2, that.state.ratings_2, that.state.contrast_array_2);\n                                that.setState({\n                                  responses_2: that.state.responses_2.slice(0, that.state.ratings_2.length),\n                                  response_time_2: that.state.response_time_2.slice(0, that.state.ratings_2.length),\n                                  counter: that.state.counter - 1,\n                                  contrast_array_2: that.state.contrast_array_2.slice(0, that.state.ratings_2.length)\n                                });\n                              } else {\n                                console.log(\"rating discarded\", that.state.responses_2, that.state.ratings_2, that.state.contrast_array_2);\n                                that.setState({\n                                  ratings_2: that.state.ratings_2.slice(0, that.state.responses_2.length)\n                                });\n                              }\n                            }\n                          }\n\n                          console.log(\"time off \", seconds);\n                        }\n\n                        r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\n                        data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\n                        data[(x + y * 256) * 4 + 3] = 255; //if there is no beep, show blank signal\n                      }\n                    }\n                  }\n\n                  t++;\n                  ctx.putImageData(imgdata, 0, 0);\n                  recWidth = canvas.width / 8;\n                  recHeight = canvas.height / 8;\n                  xPos = canvas.width / 2 - recWidth / 2;\n                  yPos = canvas.height / 2 - recHeight / 2;\n                  img = new Image();\n                  img.src = \"https://www.shareicon.net/data/256x256/2015/12/04/682310_cross_512x512.png\";\n                  ctx.fillStyle = \"gray\";\n                  ctx.fillRect(xPos, yPos, recWidth, recHeight);\n                  ctx.drawImage(img, xPos, yPos, recWidth, recHeight);\n\n                  if (!(total == end)) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  window.cancelAnimationFrame(intervalId);\n                  that.audioContext.close();\n                  that.setState({\n                    continue: true\n                  });\n                  return _context.abrupt(\"return\");\n\n                case 18:\n                  if (total < end) {\n                    intervalId = window.requestAnimationFrame(vis_quest); //console.log(that.state.contrast_array_1, that.state.responses_1);\n\n                    if (that.state.currentQ == 1 && that.state.change == true) {\n                      console.log(\"changing the q\");\n                      q_1 = QuestUpdate(q_1, [that.state.contrast_array_1[that.state.contrast_array_1.length - 1]], [that.state.responses_1[that.state.responses_1.length - 1]]);\n                      console.log(QuestQuantile(q_1));\n                      that.setState({\n                        change: false\n                      });\n                    }\n\n                    if (that.state.currentQ == 2 && that.state.change == true) {\n                      q_2 = QuestUpdate(q_2, that.state.contrast_array_1[that.state.contrast_array_1.length - 1], that.state.responses_1[that.state.responses_1.length - 1]);\n                      that.setState({\n                        change: false\n                      });\n                    }\n                  }\n\n                case 19:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _vis_quest.apply(this, arguments);\n      }\n\n      vis_quest.call(that);\n    }\n  }, {\n    key: \"keyFunction\",\n    value: function keyFunction(event) {\n      var seconds = new Date().getTime() / 1000;\n\n      if (event.keyCode === 81 && this.state.time_window == true && this.state.currentQ == 1) {\n        // Set setState\n        this.setState({\n          counter: this.state.counter + 1,\n          responses_1: this.state.responses_1.concat([1]),\n          response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if (event.keyCode === 81 && this.state.time_window == true && this.state.currentQ == 2) {\n        // Set setState\n        this.setState({\n          counter2: this.state.counter2 + 1,\n          responses_2: this.state.responses_2.concat([1]),\n          response_time_2: this.state.response_time_2.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if (event.keyCode === 69 && this.state.time_window == true && this.state.currentQ == 1) {\n        this.setState({\n          counter: this.state.counter + 1,\n          responses_1: this.state.responses_1.concat([0]),\n          response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if (event.keyCode === 69 && this.state.time_window == true && this.state.currentQ == 2) {\n        this.setState({\n          counter: this.state.counter2 + 1,\n          responses_2: this.state.responses_2.concat([0]),\n          response_time_2: this.state.response_time_2.concat([seconds - this.state.time_window_start]),\n          time_window: false\n        });\n\n        if (this.state.counter == this.state.limit) {\n          this.setState({\n            continue: true\n          });\n        }\n      }\n\n      if ((event.keyCode === 49 || event.keyCode === 50 || event.keyCode === 51 || event.keyCode === 52 || event.keyCode === 53) && this.state.time_window_rating == true) {\n        if (this.state.currentQ == 1) {\n          this.setState({\n            ratings_1: this.state.ratings_1.concat([event.keyCode - 48]),\n            time_window_rating: false\n          });\n        } else {\n          this.setState({\n            ratings_2: this.state.ratings_2.concat([event.keyCode - 48]),\n            time_window_rating: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.keyFunction, false);\n\n      if (this.state.continue == false) {\n        this.create_noise(this.audioContext);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.keyFunction, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.continue == true) {\n        alert(\"Trial completed\");\n        return React.createElement(Redirect, {\n          to: \"/Complete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Trial\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"Trial-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"c\",\n        width: \"256\",\n        height: \"256\",\n        style: {\n          zIndex: \"0\",\n          position: \"fixed\",\n          left: \"25%\",\n          width: '50%',\n          height: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"c2\",\n        width: \"256\",\n        height: \"256\",\n        style: {\n          zIndex: \"1\",\n          position: \"fixed\",\n          left: \"25%\",\n          width: '50%',\n          height: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TrialQ;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add_response_1: function add_response_1(element) {\n      return dispatch(_add_response_(element));\n    },\n    add_response_time_1: function add_response_time_1(element) {\n      return dispatch(_add_response_time_(element));\n    },\n    add_contrast_1: function add_contrast_1(element) {\n      return dispatch(_add_contrast_(element));\n    },\n    add_array: function add_array(arr) {\n      return dispatch(_add_array(arr));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrialQ);\n\nfunction beep(amp, freq, ms, audioContext) {\n  //amp:0..100, freq in Hz, ms\n  if (!audioContext) return;\n  var osc = audioContext.createOscillator();\n  var gain = audioContext.createGain();\n  osc.connect(gain);\n  osc.value = freq;\n  gain.connect(audioContext.destination);\n  gain.gain.value = amp / 100;\n  osc.start(audioContext.currentTime);\n  osc.stop(audioContext.currentTime + ms / 1000);\n} //array shuffling function, used to randomize order of presentation for different blocks\n\n\nfunction shuffle(array) {\n  var i = 0;\n  var j = 0;\n  var temp = null;\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Alika\\Desktop\\VCH_APP\\src\\containers\\TrialQ.js"],"names":["React","Component","Redirect","createStim","createGabor","QuestCreate","QuestRecompute","QuestTrials","QuestUpdate","QuestStimulate","QuestMean","QuestMode","QuestSd","QuestP","QuestPdf","QuestQuantile","PAL_Gumbel","connect","add_array","add_response_1","add_response_time_1","add_contrast_1","TrialQ","props","keyFunction","bind","create_noise","process_data","gumbel_intensities","state","continue","counter","counter2","change","responses_1","contrast_array_1","response_time_1","ratings_1","responses_2","contrast_array_2","response_time_2","ratings_2","time_window","time_window_start","time_window_rating","limit","rating_window","currentQ","canvasRef","createRef","audioContext","AudioContext","q1","q2","math","require","t1","sd1","t2","sd2","tmean","mean","sdmean","lambda","gamma","intensities","end","index1","index2","total","tt1","length","contrast_block","SimplexNoise","simplex","canvas","document","getElementById","ctx","getContext","imgdata","getImageData","width","height","data","t","tGuess","tGuessSd","pThreshold","beta","delta","grain","dim","range","q_1","q_2","stim","stimulus_blank","stimulus","jitter","Math","floor","random","start_time","contrast","intervalId","undefined","that","seconds","vis_quest","console","log","setState","Date","getTime","beep","x","y","r","noise3D","alpha","concat","slice","putImageData","recWidth","recHeight","xPos","yPos","img","Image","src","fillStyle","fillRect","drawImage","window","cancelAnimationFrame","close","requestAnimationFrame","call","event","keyCode","addEventListener","removeEventListener","alert","zIndex","position","left","mapStateToProps","mapDispatchToProps","dispatch","element","arr","amp","freq","ms","osc","createOscillator","gain","createGain","value","destination","start","currentTime","stop","shuffle","array","i","j","temp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Trial.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createStim, createGabor } from \"../Stim.js\"\r\nimport { QuestCreate, QuestRecompute, QuestTrials, QuestUpdate, QuestStimulate, QuestMean, QuestMode, QuestSd, QuestP, QuestPdf, QuestQuantile, PAL_Gumbel } from \"../Quest.js\"\r\n\r\nimport { connect } from 'react-redux'\r\nimport { add_array, add_response_1, add_response_time_1, add_contrast_1 } from '../actions/data'\r\n\r\nclass TrialQ extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.keyFunction = this.keyFunction.bind(this);\r\n    this.create_noise = this.create_noise.bind(this);\r\n    this.process_data = this.process_data.bind(this);\r\n    this.gumbel_intensities = this.gumbel_intensities.bind(this);\r\n    this.state = {\r\n      continue: false,\r\n      counter: 0,\r\n      counter2: 0,\r\n      change: false,\r\n\r\n      responses_1: [],\r\n      contrast_array_1: [],\r\n      response_time_1: [],\r\n      ratings_1: [],\r\n\r\n      responses_2: [],\r\n      contrast_array_2: [],\r\n      response_time_2: [],\r\n      ratings_2: [],\r\n\r\n      time_window: false,\r\n      time_window_start: 0,\r\n      time_window_rating: false,\r\n      limit: 100,\r\n\r\n      rating_window: true,\r\n\r\n      currentQ: 1, //1 for contrast 1 and 2 for contrast 2\r\n\r\n    }\r\n    this.canvasRef = React.createRef();\r\n    this.audioContext = new AudioContext();\r\n  }\r\n\r\n  process_data( q1, q2 ) {\r\n    const math = require('mathjs');\r\n\r\n    //Statistics\r\n    var t1 = QuestMean(q1);\t\t// Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\r\n    var sd1 = QuestSd(q1);\r\n\r\n    var t2 = QuestMean(q2);\t\t// Recommended by Pelli (1989) and King-Smith et al. (1994) as the best way to ascertain threshold.\r\n    var sd2 = QuestSd(q2);\r\n\r\n    // Take the arithmetic mean of these two threshold (75%) estimates.\r\n    var tmean = math.mean([t1, t2]);\r\n    var sdmean = math.mean([sd1, sd2]);\r\n\r\n    var lambda = 0; // normally in config file//////////////////////\r\n    var gamma = 0.01; // normally in config file//////////////////////\r\n\r\n    var intensities = gumbel_intensities(q1, q2, tmean, lambda, gamma);\r\n\r\n    return intensities; \r\n  }\r\n\r\n  gumbel_intensities(q1, q2, tmean, lambda, gamma){\r\n\r\n  }\r\n\r\n  create_noise(audioContext) {\r\n\r\n    var end = 80;\r\n    // var contrast_block = tt1;\r\n    var index1 = 0;\r\n    var index2 = 0;\r\n    var total = 0;\r\n\r\n    //train_test arrays\r\n    var tt1 = [0, .5, 1, 0, .5, 1, 0, .5, 1, 0, .5, 1];\r\n    var end = tt1.length;\r\n    var contrast_block = tt1;\r\n\r\n    var SimplexNoise = require('simplex-noise');\r\n\r\n    var simplex = new SimplexNoise(),\r\n      canvas = document.getElementById('c'),\r\n      ctx = canvas.getContext('2d'),\r\n      imgdata = ctx.getImageData(0, 0, canvas.width, canvas.height),\r\n      data = imgdata.data,\r\n      t = 0;\r\n\r\n    //initializing QUEST\r\n    var tGuess = 0.5,\r\n      tGuessSd = 0.1,\r\n      pThreshold = 0.75,\r\n      beta = 3.5,\r\n      delta = 0.01,\r\n      gamma = 0.01,\r\n      grain = 0.001,\r\n      dim = 1000,\r\n      range = 20;\r\n    var q_1 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\r\n    var q_2 = QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range);\r\n\r\n    var stim = createStim();\r\n    var stimulus_blank = createGabor(stim, 0);\r\n\r\n    var stimulus;\r\n    var jitter = Math.floor(Math.random() * 20); //jitter tone presentation 0-500ms per trial\r\n    var start_time = 100;\r\n    var contrast = 0;\r\n    var intervalId = undefined;\r\n\r\n    var that = this;\r\n    var seconds = 0;\r\n\r\n    async function vis_quest() {\r\n\r\n      if (t == start_time + jitter) {\r\n\r\n        index1 = that.state.counter;\r\n        index2 = that.state.counter2;\r\n\r\n        total = index1 + index2;\r\n\r\n        console.log(QuestQuantile(q_1), QuestQuantile(q_2));\r\n\r\n        // determining which staircase to use\r\n        if (index1 == index2) {\r\n          that.setState({             //current staircase is 1\r\n            currentQ: 1,\r\n          });\r\n        }\r\n\r\n        if (index1 != index2) {\r\n          index2++;\r\n          that.setState({             //current staircase is 2\r\n            currentQ: 2,\r\n          });\r\n        }\r\n\r\n        if (that.state.currentQ == 1) {\r\n          if (index1 = 0) {\r\n            contrast = tGuess + .3;\r\n          }\r\n          else {\r\n            contrast = QuestQuantile(q_1);\r\n          }\r\n        }\r\n        if (that.state.currentQ == 2) {\r\n          if (index2 = 0) {\r\n            contrast = tGuess - 0.3;\r\n          }\r\n          else {\r\n            contrast = QuestQuantile(q_2);\r\n          }\r\n        }\r\n\r\n        console.log(contrast);\r\n\r\n        var seconds = new Date().getTime() / 1000;\r\n\r\n        console.log(\"time on \", seconds);\r\n\r\n        that.setState({\r\n          time_window: true,\r\n          time_window_rating: true,\r\n          time_window_start: seconds,\r\n        });\r\n\r\n        console.log(\"for 1\", that.state.responses_1, that.state.ratings_1, that.state.response_time_1, that.state.contrast_array_1);\r\n        console.log(\"for 2\", that.state.responses_2, that.state.ratings_2, that.state.response_time_2, that.state.contrast_array_2);\r\n\r\n        stimulus = createGabor(stim, contrast);\r\n        beep(50, 830, 300, audioContext); //beep for arg3 miliseconds\r\n      }\r\n\r\n      for (var x = 0; x < 256; x++) {\r\n        for (var y = 0; y < 256; y++) {\r\n          if (t == start_time + jitter || t == start_time + jitter + 1 || t == start_time + jitter + 2 || t == start_time + jitter + 3 || t == start_time + jitter + 4\r\n            || t == start_time + jitter + 5 || t == start_time + jitter + 6 || t == start_time + jitter + 7 || t == start_time + jitter + 8 || t == start_time + jitter + 9\r\n            || t == start_time + jitter + 10 || t == start_time + jitter + 11 || t == start_time + jitter + 12 || t == start_time + jitter + 13 || t == start_time + jitter + 14\r\n            || t == start_time + jitter + 15 || t == start_time + jitter + 16 || t == start_time + jitter + 17 || t == start_time + jitter + 18 || t == start_time + jitter + 19\r\n            || t == start_time + jitter + 20 || t == start_time + jitter + 21 || t == start_time + jitter + 22 || t == start_time + jitter + 23 || t == start_time + jitter + 24\r\n            || t == start_time + jitter + 25 || t == start_time + jitter + 26 || t == start_time + jitter + 27 || t == start_time + jitter + 28 || t == start_time + jitter + 29\r\n            || t == start_time + jitter + 30) {\r\n            if (t == start_time + jitter + 30) {\r\n              t = 0;\r\n              //during beep show signal, then reset timer to 0\r\n            }\r\n\r\n            var r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\r\n            data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 3] = 255;\r\n          }\r\n\r\n          else {\r\n\r\n            seconds = new Date().getTime() / 1000\r\n\r\n            if (that.state.time_window_start + 2 == seconds) {\r\n              that.setState({\r\n                time_window: false,\r\n                time_window_rating: false,\r\n              });\r\n\r\n              if (that.state.currentQ == 1) {\r\n\r\n                if (that.state.contrast_array_1.length < that.state.responses_1.length) {\r\n                  that.setState({ contrast_array_1: that.state.contrast_array_1.concat([contrast]) });\r\n                  that.setState({ change: true });\r\n                }\r\n\r\n                if (that.state.responses_1.length != that.state.ratings_1.length) {\r\n\r\n                  if (that.state.responses_1.length > that.state.ratings_1.length) {\r\n\r\n                    console.log(\"response and response time discarded\", that.state.responses_1, that.state.response_time_1, that.state.ratings_1, that.state.contrast_array_1);\r\n\r\n                    that.setState({\r\n                      responses_1: that.state.responses_1.slice(0, that.state.ratings_1.length),\r\n                      response_time_1: that.state.response_time_1.slice(0, that.state.ratings_1.length),\r\n                      counter: that.state.counter - 1,\r\n                      contrast_array_1: that.state.contrast_array_1.slice(0, that.state.ratings_1.length)\r\n                    });\r\n                  }\r\n\r\n                  else {\r\n                    console.log(\"rating discarded\", that.state.responses_1, that.state.ratings_1, that.state.contrast_array_1);\r\n\r\n                    that.setState({\r\n                      ratings_1: that.state.ratings_1.slice(0, that.state.responses_1.length),\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (that.state.currentQ == 2) {\r\n\r\n                if (that.state.contrast_array_2.length < that.state.responses_2.length) {\r\n                  that.setState({ contrast_array_2: that.state.contrast_array_2.concat([contrast]) });\r\n                  that.setState({ change: true });\r\n                }\r\n\r\n                if (that.state.responses_2.length != that.state.ratings_2.length) {\r\n\r\n                  if (that.state.responses_2.length > that.state.ratings_2.length) {\r\n\r\n                    console.log(\"response and response time discarded\", that.state.responses_2, that.state.response_time_2, that.state.ratings_2, that.state.contrast_array_2);\r\n\r\n                    that.setState({\r\n                      responses_2: that.state.responses_2.slice(0, that.state.ratings_2.length),\r\n                      response_time_2: that.state.response_time_2.slice(0, that.state.ratings_2.length),\r\n                      counter: that.state.counter - 1,\r\n                      contrast_array_2: that.state.contrast_array_2.slice(0, that.state.ratings_2.length)\r\n                    });\r\n                  }\r\n\r\n                  else {\r\n                    console.log(\"rating discarded\", that.state.responses_2, that.state.ratings_2, that.state.contrast_array_2);\r\n\r\n                    that.setState({\r\n                      ratings_2: that.state.ratings_2.slice(0, that.state.responses_2.length),\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              console.log(\"time off \", seconds);\r\n            }\r\n\r\n\r\n            var r = simplex.noise3D(x / 8, y / 8, t / 8) * 0.4 + 0.35;\r\n            data[(x + y * 256) * 4 + 0] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 0] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 1] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 1] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 2] = stim.alpha * stimulus_blank[(x + y * 256) * 4 + 2] + (1 - stim.alpha) * r * 250;\r\n            data[(x + y * 256) * 4 + 3] = 255;\r\n            //if there is no beep, show blank signal\r\n          }\r\n        }\r\n      }\r\n\r\n      t++;\r\n      ctx.putImageData(imgdata, 0, 0);\r\n\r\n      var recWidth = canvas.width / 8;\r\n      var recHeight = canvas.height / 8;\r\n\r\n      var xPos = (canvas.width / 2) - (recWidth / 2);\r\n\r\n      var yPos = (canvas.height / 2) - (recHeight / 2);\r\n      var img = new Image();\r\n      img.src = \"https://www.shareicon.net/data/256x256/2015/12/04/682310_cross_512x512.png\";\r\n      ctx.fillStyle = \"gray\";\r\n\r\n      ctx.fillRect(xPos, yPos, recWidth, recHeight);\r\n      ctx.drawImage(img, xPos, yPos, recWidth, recHeight);\r\n\r\n      if (total == end) {\r\n        window.cancelAnimationFrame(intervalId);\r\n        that.audioContext.close();\r\n        that.setState({ continue: true });\r\n        return;\r\n      }\r\n\r\n      if (total < end) {\r\n        intervalId = window.requestAnimationFrame(vis_quest);\r\n\r\n        //console.log(that.state.contrast_array_1, that.state.responses_1);\r\n\r\n        if (that.state.currentQ == 1 && that.state.change == true) {\r\n          console.log(\"changing the q\")\r\n          q_1 = QuestUpdate(q_1, [that.state.contrast_array_1[that.state.contrast_array_1.length - 1]], [that.state.responses_1[that.state.responses_1.length - 1]]);\r\n          console.log(QuestQuantile(q_1));\r\n          that.setState({ change: false });\r\n        }\r\n\r\n        if (that.state.currentQ == 2 && that.state.change == true) {\r\n          q_2 = QuestUpdate(q_2, that.state.contrast_array_1[that.state.contrast_array_1.length - 1], that.state.responses_1[that.state.responses_1.length - 1]);\r\n          that.setState({ change: false });\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    vis_quest.call(that);\r\n\r\n  }\r\n\r\n  keyFunction(event) {\r\n    var seconds = new Date().getTime() / 1000\r\n\r\n    if (event.keyCode === 81 && this.state.time_window == true && this.state.currentQ == 1) {\r\n\r\n      // Set setState\r\n      this.setState({\r\n        counter: this.state.counter + 1,\r\n        responses_1: this.state.responses_1.concat([1]),\r\n        response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\r\n        time_window: false,\r\n      });\r\n\r\n      if (this.state.counter == this.state.limit) {\r\n        this.setState({ continue: true });\r\n      }\r\n\r\n    }\r\n\r\n    if (event.keyCode === 81 && this.state.time_window == true && this.state.currentQ == 2) {\r\n\r\n      // Set setState\r\n      this.setState({\r\n        counter2: this.state.counter2 + 1,\r\n        responses_2: this.state.responses_2.concat([1]),\r\n        response_time_2: this.state.response_time_2.concat([seconds - this.state.time_window_start]),\r\n        time_window: false,\r\n      });\r\n\r\n      if (this.state.counter == this.state.limit) {\r\n        this.setState({ continue: true });\r\n      }\r\n\r\n    }\r\n\r\n    if (event.keyCode === 69 && this.state.time_window == true && this.state.currentQ == 1) {\r\n      this.setState({\r\n        counter: this.state.counter + 1,\r\n        responses_1: this.state.responses_1.concat([0]),\r\n        response_time_1: this.state.response_time_1.concat([seconds - this.state.time_window_start]),\r\n        time_window: false,\r\n      });\r\n\r\n      if (this.state.counter == this.state.limit) {\r\n        this.setState({ continue: true });\r\n      }\r\n    }\r\n\r\n    if (event.keyCode === 69 && this.state.time_window == true && this.state.currentQ == 2) {\r\n      this.setState({\r\n        counter: this.state.counter2 + 1,\r\n        responses_2: this.state.responses_2.concat([0]),\r\n        response_time_2: this.state.response_time_2.concat([seconds - this.state.time_window_start]),\r\n        time_window: false,\r\n      });\r\n\r\n      if (this.state.counter == this.state.limit) {\r\n        this.setState({ continue: true });\r\n      }\r\n    }\r\n\r\n\r\n    if ((event.keyCode === 49 || event.keyCode === 50 || event.keyCode === 51 || event.keyCode === 52 || event.keyCode === 53) && this.state.time_window_rating == true) {\r\n      if (this.state.currentQ == 1) {\r\n        this.setState({\r\n          ratings_1: this.state.ratings_1.concat([event.keyCode - 48]),\r\n          time_window_rating: false,\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          ratings_2: this.state.ratings_2.concat([event.keyCode - 48]),\r\n          time_window_rating: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keyFunction, false);\r\n    if (this.state.continue == false) {\r\n      this.create_noise(this.audioContext);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.keyFunction, false);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.continue == true) {\r\n      alert(\"Trial completed\")\r\n      return <Redirect to=\"/Complete\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"Trial\">\r\n        <input type=\"hidden\" />\r\n        <header className=\"Trial-header\">\r\n          <canvas id=\"c\" width=\"256\" height=\"256\"\r\n            style={{ zIndex: \"0\", position: \"fixed\", left: \"25%\", width: '50%', height: 'auto' }}></canvas>\r\n          <canvas id=\"c2\" width=\"256\" height=\"256\"\r\n            style={{ zIndex: \"1\", position: \"fixed\", left: \"25%\", width: '50%', height: 'auto' }}></canvas>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  add_response_1: (element) => dispatch(add_response_1(element)),\r\n  add_response_time_1: (element) => dispatch(add_response_time_1(element)),\r\n  add_contrast_1: (element) => dispatch(add_contrast_1(element)),\r\n  add_array: (arr) => dispatch(add_array(arr)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrialQ);\r\n\r\n\r\nfunction beep(amp, freq, ms, audioContext) {//amp:0..100, freq in Hz, ms\r\n  if (!audioContext) return;\r\n  var osc = audioContext.createOscillator();\r\n  var gain = audioContext.createGain();\r\n  osc.connect(gain);\r\n  osc.value = freq;\r\n  gain.connect(audioContext.destination);\r\n  gain.gain.value = amp / 100;\r\n  osc.start(audioContext.currentTime);\r\n  osc.stop(audioContext.currentTime + ms / 1000);\r\n}\r\n\r\n//array shuffling function, used to randomize order of presentation for different blocks\r\nfunction shuffle(array) {\r\n  var i = 0\r\n  var j = 0\r\n  var temp = null\r\n\r\n  for (i = array.length - 1; i > 0; i -= 1) {\r\n    j = Math.floor(Math.random() * (i + 1))\r\n    temp = array[i]\r\n    array[i] = array[j]\r\n    array[j] = temp\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}