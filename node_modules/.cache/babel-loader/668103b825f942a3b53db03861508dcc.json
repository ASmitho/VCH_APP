{"ast":null,"code":"import { isArray } from 'util';\nexport function isEmpty(arrayArg) {\n  if (arrayArg === undefined || arrayArg.length == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function makeQ(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, dim) {\n  var newQ = {\n    updatePdf: 1,\n    //boolean: 0 for no, 1 for yes\n    warnPdf: 1,\n    //boolean\n    normalizePdf: 1,\n    //boolean. This adds a few ms per call to QuestUpdate, but otherwise the pdf will underflow after about 1000 trials.\n    tGuess: tGuess,\n    tGuessSd: tGuessSd,\n    pThreshold: pThreshold,\n    xThreshold: 0,\n    beta: beta,\n    delta: delta,\n    gamma: gamma,\n    grain: grain,\n    dim: dim,\n    i: [],\n    x: [],\n    x2: [],\n    p2: [],\n    s2: [],\n    //have to make an array of arrays due to lack of multidimensional array support\n    intensity: [],\n    response: [],\n    trialCount: 0,\n    quantileOrder: 0\n  };\n  return newQ;\n}\nexport function testing() {\n  console.log(that.state.responses_1);\n}\nexport function QuestCreate(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range, plotIt) {\n  var nargin = arguments.length;\n  var dim = 0;\n\n  if (nargin > 9 || nargin < 6) {\n    throw new Error(\"Incorrect number of arguments\");\n  }\n\n  if (nargin < 7 || isEmpty(grain)) {\n    grain = 0.01000;\n  }\n\n  if (true) {\n    if (nargin < 8 || isEmpty(range)) {\n      dim = 500;\n    } else {\n      if (range <= 0) {\n        throw new Error(\"Range must be greater than 0\");\n      }\n\n      dim = range / grain;\n      dim = 2 * Math.ceil(dim / 2);\n    }\n  }\n\n  if (nargin < 9 || isEmpty(plotIt)) {\n    plotIt = 0;\n  } // Double check here if there are number errors \n\n\n  if (!isFinite(tGuess) || isNaN(tGuess)) {\n    throw new Error(\"tGuess must be real and finite\");\n  }\n\n  var newQ = makeQ(tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, dim);\n  newQ = QuestRecompute(newQ, plotIt);\n  return newQ;\n}\nexport function QuestRecompute(q, plotIt) {\n  var math = require('mathjs');\n\n  if (arguments.length < 1) {\n    throw new Error(\"Usage: QuestRecompute( q, plotIt = 0 )\");\n  } //if the struct contains more than one struct as an array then you must set normalizePdf of each to 0. \n\n\n  if (!q.updatePdf) {\n    return;\n  }\n\n  if (q.gamma > q.pThreshold) {\n    console.log(\"Reducing gamma from %.2f to 0.5\");\n    q.gamma = 0.5;\n  }\n\n  if (arguments.length < 2 || isEmpty(plotIt)) {\n    plotIt = 0;\n  }\n\n  q.i = [];\n  q.x = [];\n  q.x2 = [];\n  q.p2 = [];\n  q.s2 = []; //have to make an array of arrays due to lack of multidimensional array support\n\n  for (var i = -q.dim / 2; i <= q.dim / 2; i++) {\n    q.i.push(i);\n  }\n\n  ;\n  q.x = q.i.map(function (x) {\n    return x * q.grain;\n  });\n  var tempA = q.x.map(function (x) {\n    return x / q.tGuessSd;\n  });\n  var tempB = tempA.map(function (x) {\n    return Math.pow(x, 2);\n  });\n  q.pdf = tempB.map(function (x) {\n    return x * -0.5;\n  }).map(function (x) {\n    return Math.exp(x);\n  });\n  ;\n  var sumPDF = sumVector(q.pdf);\n  q.pdf = q.pdf.map(function (x) {\n    return x / sumPDF;\n  });\n  var i2 = [];\n\n  for (i = -q.dim; i <= q.dim; i++) {\n    i2.push(i);\n  }\n\n  q.x2 = i2.map(function (x) {\n    return math.eval(x + \"*\" + q.grain);\n  });\n  tempA = q.x2.map(function (x) {\n    return math.eval(x + \"*\" + q.beta);\n  });\n  q.p2 = tempA.map(function (x) {\n    // results are slightly off from the ten thousands place increasing to the hundreths place by .01 at times;\n    return math.eval(q.delta + \"*\" + q.gamma + \"+(1-\" + q.delta + \")*(1-(1-\" + q.gamma + \")*\" + \"e^(-10 ^ \" + x + \"))\");\n  });\n\n  if (plotIt > 0) {//Plot the data via package *******************************\n  }\n\n  if (Math.min(q.p2[0], q.p2[q.p2.length - 1]) > q.pThreshold || Math.max(q.p2[0], q.p2[q.p2.length - 1]) < q.pThreshold) {\n    throw new Error('psychometric function range [' + Math.min.apply(null, q.p2) + \" \" + Math.max.apply(null, q.p2) + ' ] omits ' + q.pThreshold + ' threshold');\n  }\n\n  var linear = require('everpolate').linear; //NEED TO FIX\n\n\n  q.xThreshold = linear(q.pThreshold, q.x2, q.p2);\n\n  for (var i = 0; i < q.p2.length; i++) {\n    if (!isFinite(q.p2[i])) {\n      throw new Error('psychometric function p2 is not finite' + i);\n    }\n  } //Add check for strictly monotonic ************************\n\n\n  var tempC = q.p2.slice();\n  tempC = tempC.reverse();\n  var array1 = tempC.map(function (x) {\n    return 1 - x;\n  });\n  var array2 = tempC;\n  q.s2[0] = array1;\n  q.s2[1] = array2;\n\n  if (q.intensity == undefined || q.response == undefined) {\n    var arrayZero = new Array(10000).fill(0);\n    q.trialCount = 0;\n    q.intensity = arrayZero;\n    q.response = arrayZero;\n  }\n\n  for (var k = 0; k < q.s2.length; k++) {\n    for (i = 0; i < q.s2[k].length; i++) {\n      if (!isFinite(q.s2[k][i])) {\n        throw new Error('psychometric function s2 is not finite' + i);\n      }\n    }\n  }\n\n  var pL = q.p2[0];\n  var pH = q.p2[q.p2.length - 1];\n  var pE = pH * Math.log(pH + Number.EPSILON) - pL * Math.log(pL + Number.EPSILON) + (1 - pH + Number.EPSILON) * Math.log(1 - pH + Number.EPSILON) - (1 - pL + Number.EPSILON) * Math.log(1 - pL + Number.EPSILON);\n  pE = 1 / (1 + Math.exp(pE / (pL - pH)));\n  q.quantileOrder = (pE - pL) / (pH - pL);\n\n  for (var j = 0; j < q.pdf.length; j++) {\n    if (!isFinite(q.pdf[j])) {\n      throw new Error('prior pdf is not finite');\n    }\n  }\n\n  for (k = 0; k < q.trialCount; k++) {\n    var inten = Math.max(-1e10, Math.min(1e10, q.intensity[k]));\n    var ii = q.i.map(function (x) {\n      return q.pdf.length + x - Math.round((inten - q.tGuess) / q.grain);\n    });\n\n    if (ii[0] < 1) {\n      ii = ii.map(function (x) {\n        return x + 1 - ii[0];\n      });\n    }\n\n    if (ii[ii.length - 1] > q.s2[0].length) {\n      ii = ii.map(function (x) {\n        return x + q.s2.length - ii[ii.length - 1];\n      });\n    }\n\n    var h2 = ii.map(function (x) {\n      return q.s2[q.response[k]][x];\n    });\n\n    for (i = 0; i < h2.length; i++) {\n      q.pdf[i] = q.pdf[i] * h2[i];\n    }\n\n    if (q.normalizePdf == 0 && k % 100 == 0) {\n      (function () {\n        var sumPDF = sumVector(q.pdf);\n        q.pdf = q.pdf.map(function (x) {\n          return x / sumPDF;\n        }); //avoid underflow; keep the pdf normalized // 3 ms\n      })();\n    }\n  }\n\n  if (q.normalizePdf) {\n    var _sumPDF = sumVector(q.pdf);\n\n    q.pdf = q.pdf.map(function (x) {\n      return x / _sumPDF;\n    }); //avoid underflow; keep the pdf normalized // 3 ms\n  }\n\n  for (i = 0; i < q.pdf.length; i++) {\n    if (!isFinite(q.pdf[i])) {\n      throw new Error('pdf is not finite');\n    }\n  }\n\n  return q;\n}\nexport function QuestUpdate(q, intensity, response) {\n  if (arguments.length != 3) {\n    throw new Error(\"Incorrect number of parameters (3) \");\n  }\n\n  if (q === undefined) {\n    throw new Error(\"q is undefined \");\n  }\n\n  if (!isFinite(intensity) || isNaN(intensity)) {\n    throw new Error(\"Intensity must be real, not complex\");\n  }\n\n  if (response < 0 || response >= q.s2.length) {\n    throw new Error(\"response \" + response + \" is out of range 0 to \" + q.s2.length);\n  }\n\n  if (q.updatePdf == 1) {\n    var inten = Math.max(-1e10, Math.min(1e10, intensity));\n    var ii = q.i.map(function (x) {\n      return q.pdf.length + x - Math.round((inten - q.tGuess) / q.grain);\n    });\n\n    if (ii[0] < 1 || ii[ii.length - 1] > q.s2[0].length) {\n      if (q.warnPdf == 1) {\n        var low = (1 - q.pdf.length - q.i[0]) * q.grain + q.tGuess;\n        var high = (q.s2[0].length - q.pdf.length - q.i[q.i.length - 1]) * q.grain + q.tGuess;\n        alert('QuestUpdate: intensity ' + inten + ' out of range ' + low + ' to ' + high + '. Pdf will be inexact. Suggest that you increase \"range\" in call to QuestCreate.');\n      }\n\n      if (ii[0] < 1) {\n        ii = ii.map(function (x) {\n          return x + 1 - ii[0];\n        });\n      } else {\n        ii = ii.map(function (x) {\n          return x + q.s2[0].length - ii[ii.length - 1];\n        });\n      }\n    }\n\n    for (var i = 0; i < ii.length; i++) {\n      q.pdf[i] = q.pdf[i] * q.s2[response][ii[i]];\n    }\n\n    if (q.normalizePdf) {\n      var sumPDF = sumVector(q.pdf);\n      q.pdf = q.pdf.map(function (x) {\n        return x / sumPDF;\n      }); //avoid underflow; keep the pdf normalized // 3 ms\n    }\n  } //keep a historical record of the trials\n\n\n  q.trialCount += 1;\n\n  if (q.trialCount > q.intensity.length) {\n    // Out of space in preallocated arrays. Reallocate for additional\n    // 10000 trials. We reallocate in large chunks to reduce memory\n    // fragmentation.\n    for (var _i = 0; _i < 10000; _i++) {\n      q.intensity.push(0);\n      q.response.push(0);\n    }\n  }\n\n  for (var _i2 = 0; _i2 < q.trialCount; _i2++) {\n    q.intensity[_i2] = 0.5;\n    q.response[_i2] = response;\n  }\n\n  return q;\n}\nexport function QuestTrials(q, binsize) {\n  if (arguments.length < 1) {\n    throw new Error('Usage: trial=QuestTrials(q,[binsize])');\n  }\n\n  if (arguments.length < 2) {\n    binsize = [];\n  }\n\n  if (isEmpty(binsize) || !isFinite(binsize)) {\n    binsize = 0;\n  }\n\n  if (binsize < 0) {\n    throw new Error('binsize cannot be negative');\n  } // sort\n\n\n  var inIntensity = q.intensity.slice(0, q.trialCount + 1);\n  var inResponse = q.response.slice(0, q.trialCount + 1);\n  var withIndex = [];\n\n  for (var i in inIntensity) {\n    withIndex.push([inIntensity[i], i]);\n  }\n\n  withIndex.sort(function (left, right) {\n    return left[0] < right[0] ? -1 : 1;\n  });\n  var indexes = [];\n  var intensity = [];\n\n  for (var j in withIndex) {\n    intensity.push(withIndex[j][0]);\n    indexes.push(withIndex[j][1]);\n  }\n\n  var response = [];\n\n  for (i = 0; i < indexes.length; i++) {\n    response.push(inResponse[indexes[i]]);\n  } //quantize\n\n\n  if (binsize > 0) {\n    intensity = intensity.map(function (x) {\n      return Math.round(x / binsize) * binsize;\n    });\n  } // compact\n\n\n  j = 0;\n  var trial = {\n    intensity: [],\n    responses: []\n  };\n  trial.intensity.push(intensity[0]);\n\n  for (i = 0; i < 2; i++) {\n    trial.responses[i] = new Array();\n    trial.responses[i].push(0);\n  }\n\n  for (i = 0; i < intensity.length; i++) {\n    if (intensity[i] != trial.intensity[j]) {\n      j += 1;\n      trial.intensity.push(intensity[i]);\n\n      for (i = 0; i < 2; i++) {\n        trial.responses[i].push(0);\n      }\n    }\n\n    trial.responses[response[i]][j] = trial.responses[response[i]][j] + 1;\n  }\n\n  return trial;\n}\nexport function QuestStimulate(q, tTest, tActual, plotIt) {\n  if (arguments.length < 3) {\n    throw new Error('Usage: response=QuestSimulate(q,tTest,tActual[,plotIt])');\n  }\n\n  var linear = require('everpolate').linear;\n\n  var x2min = Math.min(q.x2[0], q.x2[q.x2.length - 1]);\n  var x2max = Math.max(q.x2[0], q.x2[q.x2.length - 1]);\n  var t = Math.min(Math.max(tTest - tActual, x2min), x2max);\n  var response = linear(t, q.x2, q.p2);\n  return response;\n} //t=QuestMean(q)\n//Get the mean threshold estimate.\n\nexport function QuestMean(q) {\n  if (arguments.length != 1) {\n    throw new Error('Usage: t=QuestMean(q)');\n  }\n\n  var sumPDF = sumVector(q.pdf);\n  var tempA = sumVector(multiplyVector(q.pdf, q.x));\n  var t = q.tGuess + tempA / sumPDF; // mean of our pdf\n\n  return t;\n} //[t,p]=QuestMode(q)\n//\"t\" is the mode threshold estimate\n//\"p\" is the value of the (unnormalized) pdf at t.\n\nexport function QuestMode(q) {\n  if (arguments.length != 1) {\n    throw new Error('Usage: t=QuestMode(q)');\n  }\n\n  var iMode = indexOfMax(q.pdf);\n  var t = q.x[iMode] + q.tGuess;\n  return t;\n} //sd=QuestSd(q)\n//Get the sd of the threshold distribution.\n\nexport function QuestSd(q) {\n  if (arguments.length != 1) {\n    throw new Error('Usage: sd=QuestSd(q)');\n  }\n\n  var p = sumVector(q.pdf);\n  var xSquared = q.x.map(function (x) {\n    return Math.pow(x, 2);\n  });\n  var Squared2 = sumVector(multiplyVector(q.pdf, q.x)) / p;\n  ;\n  var sd = Math.sqrt(sumVector(multiplyVector(q.pdf, xSquared)) / (p - Math.pow(Squared2, 2)));\n  return sd;\n} //p=QuestPdf(q,t)\n// The (possibly unnormalized) probability density of candidate threshold \"t\".\n// q and t may be vectors of the same size, in which case the returned p is a vector of that size.\n\nexport function QuestPdf(q, t) {\n  if (arguments.length != 2) {\n    throw new Error('Usage: p=QuestPdf(q,t)');\n  }\n\n  var i = Math.round((t - q.tGuess) / q.grain) + 1 + q.dim / 2;\n  i = Math.min(q.pdf.length, Math.max(1, i));\n  var p = q.pdf[i];\n  return p;\n} // p=QuestP(q,x)\n// The probability of a correct (or yes) response at intensity x, assuming\n// threshold is at x=0.\n\nexport function QuestP(q, x) {\n  if (!isReal(x)) {\n    throw new Error('x must be real, not complex.');\n  }\n\n  var p;\n  if (x < q.x2[0]) p = q.p2[0];else if (x > q.x2[q.x2.length - 1]) {\n    p = q.p2[q.p2.length - 1];\n  } else {\n    var linear = require('everpolate').linear;\n\n    p = linear(0, q.x2, q.p2)[0];\n  }\n\n  if (!isFinite(p)) {\n    throw new Error('psychometric function ' + p + ' at ' + x);\n  }\n\n  return p;\n} // intensity=QuestQuantile(q,[quantileOrder])\n//  Gets a quantile of the pdf in the struct q. You may specify the desired\n//  quantileOrder, e.g. 0.5 for median, or, making two calls, 0.05 and 0.95\n//  for a 90% confidence interval. If the \"quantileOrder\" argument is not\n//  supplied, then it's taken from the \"q\" struct. QuestCreate uses\n//  QuestRecompute to compute the optimal quantileOrder and saves that in the\n//  \"q\" struct; this quantileOrder yields a quantile  that is the most\n//  informative intensity for the next trial.\n\nexport function QuestQuantile(q, quantileOrder) {\n  if (arguments.length > 2) {\n    throw new Error('Usage: intensity=QuestQuantile(q,[quantileOrder])');\n  }\n\n  if (arguments.length < 2) {\n    quantileOrder = q.quantileOrder;\n  }\n\n  if (quantileOrder > 1 || quantileOrder < 0) {\n    throw new Error('quantileOrder' + quantileOrder + ' is outside range 0 to 1.');\n  }\n\n  var p = cumsum(q.pdf);\n\n  if (!isFinite(p[p.length - 1])) {\n    throw new Error('pdf is not finite');\n  }\n\n  if (p[p.length - 1] == 0) {\n    throw new Error('pdf is all zero');\n  }\n\n  var t;\n\n  if (quantileOrder < p[0]) {\n    t = q.tGuess + q.x[0];\n    return t;\n  }\n\n  if (quantileOrder > p[p.length - 1]) {\n    t = q.tGuess + q.x[q.x.length - 1];\n    return t;\n  }\n\n  var tempP = p.slice();\n  tempP.unshift(-1);\n  var tempA = diff(tempP);\n  var index = findZero(tempA);\n\n  if (index.length < 2) {\n    throw new Error('pdf has only ' + index.length + ' nonzero point(s)');\n  }\n\n  var linear = require('everpolate').linear;\n\n  var temp1 = subarrayIndex(p, index);\n  var temp2 = subarrayIndex(q.x, index);\n  var t = q.tGuess + linear(quantileOrder * p[p.length - 1], temp1, temp2)[0];\n  return t;\n}\nexport function PAL_Gumbel(alpha, beta, gamma, lambda, x, varargin) {\n  var math = require('mathjs');\n\n  if (arguments.length != 6) {\n    throw new Error(\"Incorrect number of parameters: alpha, beta, gamma, lambda, x, varargin\");\n  }\n\n  if (varargin !== \"\") {\n    if (varargin === 'Inverse') {\n      if (isArray(x)) {\n        var y = x.map(function (t) {\n          var c = math.eval(\"(\" + t + \"-\" + gamma + \" ) / (1 - \" + gamma + \"-\" + lambda + \") - 1\");\n          c = math.eval(\"-1 * log( -1 * \" + c + \")\");\n          c = math.eval(\"log10( \" + c + \")\");\n          c = math.divide(c, 2);\n          return math.add(alpha, c);\n        });\n      } else {\n        var c = math.eval(\"(\" + x + \"-\" + gamma + \" ) / (1 - \" + gamma + \"-\" + lambda + \") - 1\");\n        c = math.eval(\"-1 * log( -1 * \" + c + \")\");\n        c = math.eval(\"log10( \" + c + \")\");\n        c = math.divide(c, 2);\n        var y = math.add(alpha, c);\n      }\n    }\n\n    if (varargin === 'Derivative') {\n      if (isArray(x)) {\n        var y = x.map(function (x) {\n          return math.eval(\"( 1 - \" + gamma + \" - \" + lambda + \") * e^(-1 * 10^(\" + beta + \"*\" + \"(\" + x + \"-\" + alpha + \"))) * log(10) * 10^( \" + beta + \"*(\" + x + \"-\" + alpha + \"))*\" + beta);\n        });\n      } else {\n        var y = (1 - gamma - lambda) * Math.exp(-1 * Math.pow(10, beta * (x - alpha))) * Math.log(10) * Math.pow(10, beta * (x - alpha)) * beta;\n      }\n    }\n  } else {\n    if (isArray(x)) {\n      var y = x.map(function (t) {\n        return math.eval(gamma + \"+ ( 1 - \" + gamma + \" - \" + lambda + \") * ( 1 - e^(-1 * 10^(\" + beta + \"*\" + \"(\" + t + \"-\" + alpha + \"))))\");\n      });\n    } else {\n      var y = math.eval(gamma + \"+ ( 1 - \" + gamma + \" - \" + lambda + \") * ( 1 - e^(-1 * 10^(\" + beta + \"*\" + \"(\" + x + \"-\" + alpha + \"))))\"); //var y = gamma + (1 - gamma - lambda) * (1 - Math.exp( -1  * Math.pow( 10, (beta *(x - alpha))))); \n    }\n  }\n\n  return y;\n} //HELPER FUNCTIONS \n\nfunction subarrayIndex(arr, indices) {\n  var new_array = [];\n\n  for (var i = 0; i < indices.length; i++) {\n    new_array.push(arr[indices[i]]);\n  }\n\n  return new_array;\n}\n\nfunction findZero(arr) {\n  var new_array = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      new_array.push(i);\n    }\n\n    ;\n  }\n\n  return new_array;\n}\n\nfunction diff(arr) {\n  var new_array = [];\n\n  for (var i = 0; i < arr.length - 1; i++) {\n    new_array.push(arr[i + 1] - arr[i]);\n  }\n\n  return new_array;\n}\n\nexport function cumsum(arr) {\n  var new_array = [];\n  arr.reduce(function (a, b, i) {\n    return new_array[i] = a + b;\n  }, 0);\n  return new_array;\n}\n\nfunction multiplyVector(a, b) {\n  return a.map(function (e, i) {\n    return e * b[i];\n  });\n}\n\nexport function sumVector(v) {\n  return v.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\nexport function indexOfMax(arr) {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  var max = arr[0];\n  var maxIndex = 0;\n\n  for (var i = 1; i < arr.length; i++) {\n    if (arr[i] > max) {\n      maxIndex = i;\n      max = arr[i];\n    }\n  }\n\n  return maxIndex;\n}\n\nfunction isReal(x) {\n  if (!isFinite(x) || isNaN(x)) {\n    return false;\n  } else {\n    return true;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Alika\\Desktop\\VCH_APP\\src\\Quest.js"],"names":["isArray","isEmpty","arrayArg","undefined","length","makeQ","tGuess","tGuessSd","pThreshold","beta","delta","gamma","grain","dim","newQ","updatePdf","warnPdf","normalizePdf","xThreshold","i","x","x2","p2","s2","intensity","response","trialCount","quantileOrder","testing","console","log","that","state","responses_1","QuestCreate","range","plotIt","nargin","arguments","Error","Math","ceil","isFinite","isNaN","QuestRecompute","q","math","require","push","map","tempA","tempB","pow","pdf","exp","sumPDF","sumVector","i2","eval","min","max","apply","linear","tempC","slice","reverse","array1","array2","arrayZero","Array","fill","k","pL","pH","pE","Number","EPSILON","j","inten","ii","round","h2","QuestUpdate","low","high","alert","QuestTrials","binsize","inIntensity","inResponse","withIndex","sort","left","right","indexes","trial","responses","QuestStimulate","tTest","tActual","x2min","x2max","t","QuestMean","multiplyVector","QuestMode","iMode","indexOfMax","QuestSd","p","xSquared","Squared2","sd","sqrt","QuestPdf","QuestP","isReal","QuestQuantile","cumsum","tempP","unshift","diff","index","findZero","temp1","subarrayIndex","temp2","PAL_Gumbel","alpha","lambda","varargin","y","c","divide","add","arr","indices","new_array","reduce","a","b","e","v","maxIndex"],"mappings":"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","sourcesContent":["import { isArray } from 'util';\r\n\r\nexport function isEmpty( arrayArg ){\r\n    if (arrayArg === undefined || arrayArg.length == 0) {\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function makeQ( tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, dim ){\r\n    var newQ = {\r\n        updatePdf: 1, //boolean: 0 for no, 1 for yes\r\n        warnPdf: 1,  //boolean\r\n        normalizePdf: 1,  //boolean. This adds a few ms per call to QuestUpdate, but otherwise the pdf will underflow after about 1000 trials.\r\n        tGuess: tGuess,\r\n        tGuessSd: tGuessSd,\r\n        pThreshold: pThreshold,\r\n        xThreshold: 0, \r\n        beta: beta,\r\n        delta: delta,\r\n        gamma: gamma,\r\n        grain: grain,\r\n        dim: dim,\r\n        i: [],\r\n        x: [], \r\n        x2: [],\r\n        p2: [],\r\n        s2: [], //have to make an array of arrays due to lack of multidimensional array support\r\n        intensity: [], \r\n        response: [],\r\n        trialCount: 0,\r\n        quantileOrder: 0, \r\n    };\r\n\r\n    return newQ; \r\n}\r\n\r\nexport function testing(){\r\n    console.log(that.state.responses_1);\r\n}\r\n\r\nexport function QuestCreate( tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, range, plotIt ){\r\n\r\n    let nargin = arguments.length;\r\n    let dim = 0;\r\n    \r\n    if(nargin > 9 || nargin < 6){\r\n        throw new Error(\"Incorrect number of arguments\");\r\n    }\r\n    if( nargin < 7 || isEmpty( grain ) ){\r\n        grain = 0.01000;\r\n    }\r\n\r\n    if( true ){\r\n        if( nargin < 8 || isEmpty( range ) ){\r\n            dim = 500;\r\n        }\r\n        else{\r\n            if( range <= 0 ){\r\n                throw new Error(\"Range must be greater than 0\");\r\n            }\r\n            dim = range / grain;\r\n            dim = 2 * Math.ceil( dim / 2 );\r\n        }\r\n    }\r\n\r\n    if( nargin < 9 || isEmpty( plotIt )) {\r\n        plotIt = 0;\r\n    }\r\n\r\n    // Double check here if there are number errors \r\n    if( !(isFinite( tGuess )) || (isNaN( tGuess )) ){\r\n        throw new Error( \"tGuess must be real and finite\" );\r\n    }\r\n    \r\n    var newQ = makeQ( tGuess, tGuessSd, pThreshold, beta, delta, gamma, grain, dim );\r\n    newQ = QuestRecompute( newQ, plotIt );\r\n\r\n    return newQ;\r\n}\r\n\r\nexport function QuestRecompute( q, plotIt ) {\r\n\r\n    const math = require('mathjs');\r\n\r\n    if( arguments.length < 1 ){\r\n        throw new Error(\"Usage: QuestRecompute( q, plotIt = 0 )\");\r\n    }\r\n\r\n    //if the struct contains more than one struct as an array then you must set normalizePdf of each to 0. \r\n\r\n    if( !q.updatePdf ){\r\n        return\r\n    }\r\n\r\n    if( q.gamma > q.pThreshold ){\r\n        console.log(\"Reducing gamma from %.2f to 0.5\");\r\n        q.gamma = 0.5; \r\n    }\r\n\r\n    if( arguments.length < 2 || isEmpty( plotIt ) ){\r\n        plotIt = 0; \r\n    }\r\n\r\n    q.i = [];\r\n    q.x = []; \r\n    q.x2 = [];\r\n    q.p2 = [];\r\n    q.s2 = []; //have to make an array of arrays due to lack of multidimensional array support\r\n\r\n\r\n    for(var i = -q.dim/2; i <= q.dim/2; i++){\r\n        q.i.push( i );  \r\n    };\r\n\r\n    q.x = q.i.map( function( x ) { return x * q.grain; });\r\n\r\n    let tempA = q.x.map( function( x ) { return x / q.tGuessSd; });\r\n    let tempB = tempA.map( function ( x ) { return Math.pow( x, 2 ); });\r\n\r\n    q.pdf = (tempB.map( function ( x ) { return x * -0.5; })).map( function ( x ) { return Math.exp( x ); });;\r\n    let sumPDF = sumVector(q.pdf); \r\n    q.pdf = q.pdf.map( function( x ) { return x / sumPDF; });\r\n\r\n\r\n    let i2 = []; \r\n    for( i = -q.dim; i <= q.dim; i++){\r\n        i2.push(i);  \r\n    }\r\n    q.x2 = i2.map( function( x ) {return (math.eval(x + \"*\" + q.grain));}); \r\n\r\n    tempA = q.x2.map( function( x ) { return (math.eval(x + \"*\" + q.beta)); }); \r\n\r\n    q.p2 = tempA.map( function( x ) { \r\n        // results are slightly off from the ten thousands place increasing to the hundreths place by .01 at times;\r\n        return ( math.eval( q.delta + \"*\" + q.gamma + \"+(1-\" + q.delta + \")*(1-(1-\" + q.gamma +\")*\" + \"e^(-10 ^ \" + x + \"))\"));\r\n    }); \r\n\r\n    if( plotIt > 0 ){\r\n        //Plot the data via package *******************************\r\n    }\r\n\r\n    if( Math.min(q.p2[0], q.p2[q.p2.length - 1]) > q.pThreshold || Math.max(q.p2[0], q.p2[q.p2.length - 1]) < q.pThreshold){\r\n        throw new Error( 'psychometric function range [' + Math.min.apply( null, q.p2 ) + \" \" +  Math.max.apply( null, q.p2 ) + ' ] omits ' + q.pThreshold + ' threshold');\r\n    }\r\n\r\n    var linear = require('everpolate').linear;\r\n        //NEED TO FIX\r\n    q.xThreshold= linear( q.pThreshold , q.x2, q.p2);\r\n\r\n    \r\n    for(var i = 0; i < q.p2.length; i++){\r\n        if(!isFinite(q.p2[i])){\r\n            throw new Error( 'psychometric function p2 is not finite' + i);\r\n        }\r\n    }\r\n\r\n    //Add check for strictly monotonic ************************\r\n\r\n    let tempC = q.p2.slice(); \r\n    tempC = tempC.reverse(); \r\n    let array1 = tempC.map( function( x ) { return 1 - x; }); \r\n    let array2 = tempC; \r\n\r\n    q.s2[0] = array1; \r\n    q.s2[1] = array2; \r\n\r\n    if( q.intensity == undefined || q.response == undefined ){\r\n        let arrayZero = new Array(10000).fill(0); \r\n        q.trialCount = 0;\r\n        q.intensity = arrayZero;\r\n        q.response = arrayZero;\r\n    }   \r\n\r\n\r\n    for( var k = 0; k < q.s2.length; k++){\r\n        for( i = 0; i < q.s2[k].length; i++){\r\n            if(!isFinite(q.s2[k][i])){\r\n                throw new Error( 'psychometric function s2 is not finite' + i);\r\n            }\r\n        }\r\n    }     \r\n    \r\n    let pL = q.p2[0];\r\n    let pH = q.p2[q.p2.length - 1];\r\n    let pE = pH * Math.log(pH + Number.EPSILON) - pL * Math.log( pL+Number.EPSILON ) + ( 1 - pH + Number.EPSILON) * Math.log( 1 - pH + Number.EPSILON ) - ( 1 - pL + Number.EPSILON) * Math.log( 1 - pL + Number.EPSILON);\r\n    pE = 1 / (1 + Math.exp( pE / ( pL - pH)));\r\n    q.quantileOrder= ( pE - pL ) / ( pH - pL);\r\n\r\n    for(var j = 0; j < q.pdf.length; j++){\r\n        if(!isFinite(q.pdf[j])){\r\n            throw new Error( 'prior pdf is not finite');\r\n        }\r\n    }\r\n\r\n    for(k = 0; k < q.trialCount; k++){\r\n        var inten = Math.max( -1e10, Math.min( 1e10 , q.intensity[k])); \r\n        var ii = q.i.map( function( x ) { return q.pdf.length + x - Math.round(( inten - q.tGuess ) / q.grain ); } );\r\n        \r\n        if( ii[ 0 ] < 1){\r\n            ii = ii.map( function( x ) { return (x + 1 - ii[ 0 ]) ; }); \r\n        }\r\n\r\n        if( ii[ii.length - 1] > q.s2[0].length ){\r\n            ii = ii.map( function( x ) { return( x + q.s2.length - ii[ii.length - 1] ); } ); \r\n        }\r\n\r\n        let h2 = ii.map( function( x ) { return( q.s2[q.response[k]][x] ); });\r\n\r\n        for(i = 0; i < h2.length; i++){\r\n            q.pdf[i] = q.pdf[i] * h2[i];\r\n        }\r\n\r\n\t\tif( q.normalizePdf == 0 && k % 100 == 0){\r\n            let sumPDF = sumVector(q.pdf); \r\n            q.pdf = q.pdf.map( function( x ) { return x / sumPDF; }); //avoid underflow; keep the pdf normalized // 3 ms\r\n        }\r\n    }\r\n    \r\n\r\n    if( q.normalizePdf ){\r\n        let sumPDF = sumVector( q.pdf ); \r\n        q.pdf = q.pdf.map( function( x ) { return x / sumPDF; }); //avoid underflow; keep the pdf normalized // 3 ms\r\n    }\r\n\r\n    for(i = 0; i < q.pdf.length; i++){\r\n        if(!isFinite(q.pdf[i])){\r\n            throw new Error( 'pdf is not finite');\r\n        }\r\n    }\r\n\r\n    return q; \r\n}\r\n\r\nexport function QuestUpdate( q, intensity, response ) {\r\n\r\n\r\n    if( arguments.length != 3){\r\n        throw new Error( \"Incorrect number of parameters (3) \");\r\n    }\r\n\r\n    if( q === undefined ){\r\n        throw new Error( \"q is undefined \" );\r\n    }\r\n\r\n    if( !(isFinite( intensity )) || (isNaN( intensity )) ){\r\n        throw new Error( \"Intensity must be real, not complex\" );\r\n    }   \r\n\r\n    if( response < 0 || response >= q.s2.length){\r\n        throw new Error( \"response \" + response + \" is out of range 0 to \" + q.s2.length);\r\n    }\r\n\r\n    if( q.updatePdf == 1 ){\r\n\r\n        var inten = Math.max( -1e10, Math.min( 1e10 , intensity)); \r\n        var ii = q.i.map( function( x ) { return q.pdf.length + x - Math.round(( inten - q.tGuess ) / q.grain ); } );\r\n\r\n        if( ii[ 0 ] < 1 || ii[ii.length - 1] > q.s2[0].length ){\r\n            if( q.warnPdf == 1 ){\r\n                let low= ( 1 - q.pdf.length - q.i[0] ) * q.grain + q.tGuess;\r\n                let high=( q.s2[0].length - q.pdf.length - q.i[q.i.length - 1] ) * q.grain + q.tGuess;\r\n                alert('QuestUpdate: intensity ' + inten + ' out of range ' + low + ' to ' + high + '. Pdf will be inexact. Suggest that you increase \"range\" in call to QuestCreate.');\r\n            }\r\n\r\n            if( ii[ 0 ] < 1){\r\n                ii = ii.map( function( x ) { return (x + 1 - ii[ 0 ]) ; }); \r\n            }\r\n\r\n            else {\r\n                ii = ii.map( function( x ) { return (x + q.s2[0].length - ii[ ii.length - 1]) ; }); \r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < ii.length; i++){\r\n            q.pdf[i] = q.pdf[i] * q.s2[response][ii[i]];\r\n        }\r\n\r\n        if( q.normalizePdf ){\r\n            let sumPDF = sumVector(q.pdf); \r\n            q.pdf = q.pdf.map( function( x ) { return x / sumPDF; }); //avoid underflow; keep the pdf normalized // 3 ms\r\n        }\r\n    }\r\n\r\n    //keep a historical record of the trials\r\n    q.trialCount += 1;\r\n\r\n    if(q.trialCount > q.intensity.length){\r\n        // Out of space in preallocated arrays. Reallocate for additional\r\n        // 10000 trials. We reallocate in large chunks to reduce memory\r\n        // fragmentation.\r\n\r\n        for(let i = 0; i < 10000; i++){\r\n        q.intensity.push(0);\r\n        q.response.push(0);\r\n        }\r\n    }\r\n\r\n    for( let i = 0; i < q.trialCount; i++){\r\n\r\n        q.intensity[i] = 0.5; \r\n        q.response[i] = response; \r\n    }\r\n\r\n    return q; \r\n}\r\n\r\nexport function QuestTrials(q, binsize){\r\n    if( arguments.length < 1 ){\r\n        throw new Error('Usage: trial=QuestTrials(q,[binsize])');\r\n    }\r\n\r\n    if( arguments.length < 2 ){\r\n        binsize = []; \r\n    }\r\n\r\n    if( isEmpty( binsize ) || !isFinite( binsize )){\r\n        binsize = 0; \r\n    }\r\n\r\n    if( binsize < 0 ){\r\n        throw new Error('binsize cannot be negative');\r\n    }\r\n    \r\n    // sort\r\n    var inIntensity = q.intensity.slice(0, q.trialCount + 1);\r\n    var inResponse = q.response.slice(0, q.trialCount + 1);\r\n\r\n    var withIndex = [];\r\n    for (var i in inIntensity) {\r\n        withIndex.push([inIntensity[i], i]);\r\n    }\r\n    withIndex.sort(function(left, right) {\r\n        return left[0] < right[0] ? -1 : 1;\r\n        });\r\n\r\n    var indexes = [];\r\n    var intensity = [];\r\n\r\n    for (var j in withIndex) {\r\n        intensity.push(withIndex[j][0]);\r\n        indexes.push(withIndex[j][1]);\r\n    }\r\n\r\n    var response = []; \r\n\r\n    for(i = 0; i < indexes.length; i++){\r\n        response.push(inResponse[indexes[i]]);\r\n    }\r\n\r\n    //quantize\r\n    if( binsize > 0){\r\n        intensity = intensity.map(function(x) { return(Math.round( x / binsize ) * binsize); }); \r\n    }\r\n\r\n    // compact\r\n    j = 0;\r\n\r\n    var trial = {\r\n        intensity: [],\r\n        responses: [], \r\n    }\r\n\r\n    trial.intensity.push(intensity[0]); \r\n\r\n    for(i = 0; i < 2; i++){\r\n        trial.responses[i] = new Array(); \r\n        trial.responses[i].push(0); \r\n    }\r\n\r\n    for( i = 0; i < intensity.length; i++){\r\n        if(intensity[i] != trial.intensity[j]){\r\n            j += 1;\r\n            trial.intensity.push(intensity[i]);\r\n            for(i = 0; i < 2; i++){\r\n                trial.responses[i].push(0); \r\n            }\r\n        }\r\n        trial.responses[response[i]][j] = trial.responses[response[i]][j] + 1;\r\n    }\r\n\r\n    return trial; \r\n}\r\n\r\n\r\nexport function QuestStimulate(q, tTest, tActual, plotIt){\r\n    if( arguments.length < 3 ){\r\n        throw new Error('Usage: response=QuestSimulate(q,tTest,tActual[,plotIt])');\r\n    }\r\n\r\n    var linear = require('everpolate').linear\r\n\r\n    var x2min = Math.min(q.x2[0], q.x2[q.x2.length-1]);\r\n    var x2max = Math.max(q.x2[0], q.x2[q.x2.length-1]);\r\n    var t= Math.min(Math.max((tTest - tActual), x2min) , x2max);\r\n    var response = linear(t, q.x2, q.p2);\r\n\r\n    return response; \r\n}\r\n\r\n//t=QuestMean(q)\r\n//Get the mean threshold estimate.\r\n\r\nexport function QuestMean( q ){\r\n    if( arguments.length != 1 ){\r\n        throw new Error('Usage: t=QuestMean(q)');\r\n    }\r\n\r\n    let sumPDF = sumVector( q.pdf ); \r\n\r\n    let tempA = sumVector(multiplyVector(q.pdf, q.x)); \r\n\r\n    var t = q.tGuess + tempA / sumPDF;\t// mean of our pdf\r\n\r\n    return t; \r\n}\r\n\r\n//[t,p]=QuestMode(q)\r\n//\"t\" is the mode threshold estimate\r\n//\"p\" is the value of the (unnormalized) pdf at t.\r\nexport function QuestMode( q ){\r\n    if( arguments.length != 1 ){\r\n        throw new Error('Usage: t=QuestMode(q)');\r\n    }\r\n\r\n    let iMode = indexOfMax(q.pdf);\r\n    var t = q.x[iMode] + q.tGuess;\r\n    return t; \r\n}\r\n\r\n\r\n//sd=QuestSd(q)\r\n//Get the sd of the threshold distribution.\r\nexport function QuestSd( q ){\r\n    if( arguments.length != 1 ){\r\n        throw new Error('Usage: sd=QuestSd(q)');\r\n    }\r\n    let p = sumVector( q.pdf );\r\n    var xSquared = q.x.map(function(x){return Math.pow(x, 2); }); \r\n    var Squared2 = sumVector( multiplyVector(q.pdf, q.x)) / p; ;\r\n\r\n    \r\n    var sd= Math.sqrt( sumVector(multiplyVector(q.pdf, xSquared)) / (p - Math.pow(Squared2, 2)));\r\n\r\n    return sd; \r\n}\r\n//p=QuestPdf(q,t)\r\n// The (possibly unnormalized) probability density of candidate threshold \"t\".\r\n// q and t may be vectors of the same size, in which case the returned p is a vector of that size.\r\nexport function QuestPdf( q, t ){\r\n    if( arguments.length != 2 ){\r\n        throw new Error('Usage: p=QuestPdf(q,t)');\r\n    }\r\n\r\n    var i= Math.round( ( t- q.tGuess ) / q.grain ) + 1 + q.dim / 2;\r\n    i = Math.min( q.pdf.length , Math.max( 1 , i ));\r\n    var p = q.pdf[i];\r\n    return p; \r\n}\r\n\r\n// p=QuestP(q,x)\r\n// The probability of a correct (or yes) response at intensity x, assuming\r\n// threshold is at x=0.\r\nexport function QuestP( q, x ){\r\n\r\n    if( !isReal( x ) ){\r\n        throw new Error('x must be real, not complex.');\r\n    }\r\n\r\n    var p; \r\n    \r\n\r\n    if( x < q.x2[0] )\r\n        p = q.p2[0];\r\n    \r\n    else if( x > q.x2[q.x2.length-1] ){\r\n        p = q.p2[q.p2.length-1]; \r\n    }\r\n\r\n    else{\r\n        var linear = require('everpolate').linear\r\n        p = linear(0, q.x2, q.p2)[0];\r\n    }\r\n\r\n    if( !isFinite(p) ){\r\n        throw new Error('psychometric function ' + p + ' at ' + x);\r\n    }\r\n\r\n    return p; \r\n    \r\n\r\n}\r\n\r\n// intensity=QuestQuantile(q,[quantileOrder])\r\n//  Gets a quantile of the pdf in the struct q. You may specify the desired\r\n//  quantileOrder, e.g. 0.5 for median, or, making two calls, 0.05 and 0.95\r\n//  for a 90% confidence interval. If the \"quantileOrder\" argument is not\r\n//  supplied, then it's taken from the \"q\" struct. QuestCreate uses\r\n//  QuestRecompute to compute the optimal quantileOrder and saves that in the\r\n//  \"q\" struct; this quantileOrder yields a quantile  that is the most\r\n//  informative intensity for the next trial.\r\n\r\nexport function QuestQuantile( q, quantileOrder ){\r\n\r\n    if( arguments.length > 2 ){\r\n        throw new Error('Usage: intensity=QuestQuantile(q,[quantileOrder])');\r\n    }\r\n\r\n    if( arguments.length < 2 ){\r\n        quantileOrder = q.quantileOrder;\r\n    }\r\n\r\n    if( quantileOrder > 1 || quantileOrder < 0 ) {\r\n        throw new Error('quantileOrder' + quantileOrder + ' is outside range 0 to 1.');\r\n    }\r\n\r\n    var p = cumsum( q.pdf );\r\n\r\n    if( !isFinite ( p[p.length - 1] )) {\r\n        throw new Error('pdf is not finite');\r\n    }\r\n\r\n    if( p[p.length - 1] == 0) {\r\n        throw new Error('pdf is all zero');\r\n    }\r\n\r\n    var t; \r\n\r\n    if( quantileOrder < p[0] ){\r\n        t = q.tGuess + q.x[0];\r\n        return t;\r\n    }\r\n\r\n    if( quantileOrder > p[ p.length - 1] ){\r\n        t = q.tGuess + q.x[ q.x.length - 1];\r\n        return t;\r\n    }\r\n\r\n    var tempP = p.slice(); \r\n    \r\n    tempP.unshift(-1);\r\n\r\n    let tempA = diff( tempP );\r\n    var index = findZero( tempA );\r\n\r\n    \r\n\r\n    if( index.length < 2){\r\n\t    throw new Error('pdf has only ' + index.length + ' nonzero point(s)');\r\n    }\r\n\r\n    var linear = require('everpolate').linear\r\n\r\n    var temp1 = subarrayIndex(p, index);\r\n    var temp2 = subarrayIndex(q.x, index);\r\n\r\n    var t  = q.tGuess + (linear(quantileOrder * p[ p.length - 1 ], temp1, temp2)[0]);\r\n    return t; \r\n}\r\n\r\nexport function PAL_Gumbel(alpha, beta, gamma, lambda, x, varargin){\r\n\r\n    const math = require('mathjs');\r\n\r\n    if ( arguments.length != 6){\r\n        throw new Error(\"Incorrect number of parameters: alpha, beta, gamma, lambda, x, varargin\");\r\n    }\r\n\r\n    if(  varargin !== \"\" ){\r\n        if( varargin === 'Inverse' ){\r\n            if ( isArray(x)){\r\n                var y = x.map(function(t){\r\n                    var c = math.eval( \"(\" + t + \"-\" + gamma + \" ) / (1 - \" + gamma + \"-\" + lambda + \") - 1\");\r\n                    c = math.eval(\"-1 * log( -1 * \" + c + \")\");\r\n                    c = math.eval( \"log10( \" + c + \")\");\r\n                    c = math.divide(c, 2);\r\n                    return math.add(alpha, c); \r\n                })\r\n                \r\n            }\r\n            else{\r\n                var c = math.eval( \"(\" + x + \"-\" + gamma + \" ) / (1 - \" + gamma + \"-\" + lambda + \") - 1\");\r\n                c = math.eval(\"-1 * log( -1 * \" + c + \")\");\r\n                c = math.eval( \"log10( \" + c + \")\");\r\n                c = math.divide(c, 2);\r\n                var y = math.add(alpha, c); \r\n            }\r\n        }\r\n        if( varargin === 'Derivative' ){\r\n            if( isArray( x )){\r\n                var y = x.map(function(x){\r\n                    return math.eval(\"( 1 - \" + gamma + \" - \" + lambda + \") * e^(-1 * 10^(\" + beta + \"*\" + \"(\" + x + \"-\" + alpha + \"))) * log(10) * 10^( \" + beta + \"*(\" + x + \"-\" + alpha + \"))*\" + beta); \r\n                })\r\n            }\r\n            else{\r\n                var y = (1 - gamma - lambda) * Math.exp( -1  * Math.pow( 10, (beta *(x - alpha)))) * Math.log(10) * Math.pow(10, (beta *( x - alpha))) * beta;\r\n            }\r\n        }\r\n    }\r\n    \r\n    else{\r\n        if( isArray( x )){\r\n            var y = x.map(function(t){\r\n                return math.eval(gamma + \"+ ( 1 - \" + gamma + \" - \" + lambda + \") * ( 1 - e^(-1 * 10^(\" + beta + \"*\" + \"(\" + t + \"-\" + alpha + \"))))\"); \r\n            })\r\n        }\r\n        else{\r\n            var y = math.eval(gamma + \"+ ( 1 - \" + gamma + \" - \" + lambda + \") * ( 1 - e^(-1 * 10^(\" + beta + \"*\" + \"(\" + x + \"-\" + alpha + \"))))\"); \r\n            //var y = gamma + (1 - gamma - lambda) * (1 - Math.exp( -1  * Math.pow( 10, (beta *(x - alpha))))); \r\n        }\r\n    }\r\n\r\n    return y;\r\n    \r\n}\r\n\r\n//HELPER FUNCTIONS \r\n\r\nfunction subarrayIndex( arr, indices ){\r\n    var new_array = []\r\n\r\n    for( var i = 0; i < indices.length; i++){\r\n        new_array.push( arr[indices[i]] );\r\n    }\r\n\r\n    return new_array; \r\n}\r\n\r\nfunction findZero ( arr ){\r\n    var new_array = []\r\n\r\n    for(var i = 0; i < arr.length; i++ ){\r\n        if( arr[i] > 0 ){\r\n            new_array.push(i);\r\n        };\r\n    }\r\n\r\n    return new_array; \r\n}\r\n\r\nfunction diff( arr ){\r\n    var new_array = []\r\n\r\n    for(var i = 0; i < arr.length - 1; i++ ){\r\n        new_array.push( arr[ i + 1 ] - arr[ i ] );\r\n    }\r\n\r\n    return new_array; \r\n}\r\n\r\nexport function cumsum( arr ){\r\n    var new_array = []; \r\n    arr.reduce(function(a,b,i) { return new_array[i] = a+b; }, 0);\r\n    return new_array; \r\n}\r\n\r\n\r\nfunction multiplyVector(a,b){\r\n    return a.map((e,i) => e * b[i]);\r\n}\r\n\r\nexport function sumVector(v){\r\n    return v.reduce(( a, b ) => a + b, 0);\r\n}\r\n\r\nexport function indexOfMax(arr) {\r\n    if (arr.length === 0) {\r\n        return -1;\r\n    }\r\n\r\n    var max = arr[0];\r\n    var maxIndex = 0;\r\n\r\n    for (var i = 1; i < arr.length; i++) {\r\n        if (arr[i] > max) {\r\n            maxIndex = i;\r\n            max = arr[i];\r\n        }\r\n    }\r\n\r\n    return maxIndex;\r\n}\r\n\r\nfunction isReal( x ){\r\n    if( !(isFinite( x )) || (isNaN( x )) ){\r\n        return false;\r\n    }\r\n    else{ return true; }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}